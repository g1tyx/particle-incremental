{"version":3,"file":"index-dbf948fc.js","sources":["../../node_modules/break_eternity.js/dist/break_eternity.esm.js","../../src/player.ts","../../src/util.ts","../../src/music.ts","../../src/upgrades.ts","../../src/achievements.ts","../../src/features.ts","../../src/main.ts"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\n/**\r\n * A LRU cache intended for caching pure functions.\r\n */\nvar LRUCache = /*#__PURE__*/function () {\n  /**\r\n   * @param maxSize The maximum size for this cache. We recommend setting this\r\n   * to be one less than a power of 2, as most hashtables - including V8's\r\n   * Object hashtable (https://crsrc.org/c/v8/src/objects/ordered-hash-table.cc)\r\n   * - uses powers of two for hashtable sizes. It can't exactly be a power of\r\n   * two, as a .set() call could temporarily set the size of the map to be\r\n   * maxSize + 1.\r\n   */\n  function LRUCache(maxSize) {\n    _classCallCheck(this, LRUCache);\n\n    this.map = new Map(); // Invariant: Exactly one of the below is true before and after calling a\n    // LRUCache method:\n    // - first and last are both undefined, and map.size() is 0.\n    // - first and last are the same object, and map.size() is 1.\n    // - first and last are different objects, and map.size() is greater than 1.\n\n    this.first = undefined;\n    this.last = undefined;\n    this.maxSize = maxSize;\n  }\n\n  _createClass(LRUCache, [{\n    key: \"size\",\n    get: function get() {\n      return this.map.size;\n    }\n    /**\r\n     * Gets the specified key from the cache, or undefined if it is not in the\r\n     * cache.\r\n     * @param key The key to get.\r\n     * @returns The cached value, or undefined if key is not in the cache.\r\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var node = this.map.get(key);\n\n      if (node === undefined) {\n        return undefined;\n      } // It is guaranteed that there is at least one item in the cache.\n      // Therefore, first and last are guaranteed to be a ListNode...\n      // but if there is only one item, they might be the same.\n      // Update the order of the list to make this node the first node in the\n      // list.\n      // This isn't needed if this node is already the first node in the list.\n\n\n      if (node !== this.first) {\n        // As this node is DIFFERENT from the first node, it is guaranteed that\n        // there are at least two items in the cache.\n        // However, this node could possibly be the last item.\n        if (node === this.last) {\n          // This node IS the last node.\n          this.last = node.prev; // From the invariants, there must be at least two items in the cache,\n          // so node - which is the original \"last node\" - must have a defined\n          // previous node. Therefore, this.last - set above - must be defined\n          // here.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          this.last.next = undefined;\n        } else {\n          // This node is somewhere in the middle of the list, so there must be at\n          // least THREE items in the list, and this node's prev and next must be\n          // defined here.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          node.prev.next = node.next; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          node.next.prev = node.prev;\n        }\n\n        node.next = this.first; // From the invariants, there must be at least two items in the cache, so\n        // this.first must be a valid ListNode.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.first.prev = node;\n        this.first = node;\n      }\n\n      return node.value;\n    }\n    /**\r\n     * Sets an entry in the cache.\r\n     *\r\n     * @param key The key of the entry.\r\n     * @param value The value of the entry.\r\n     * @throws Error, if the map already contains the key.\r\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      // Ensure that this.maxSize >= 1.\n      if (this.maxSize < 1) {\n        return;\n      }\n\n      if (this.map.has(key)) {\n        throw new Error(\"Cannot update existing keys in the cache\");\n      }\n\n      var node = new ListNode(key, value); // Move node to the front of the list.\n\n      if (this.first === undefined) {\n        // If the first is undefined, the last is undefined too.\n        // Therefore, this cache has no items in it.\n        this.first = node;\n        this.last = node;\n      } else {\n        // This cache has at least one item in it.\n        node.next = this.first;\n        this.first.prev = node;\n        this.first = node;\n      }\n\n      this.map.set(key, node);\n\n      while (this.map.size > this.maxSize) {\n        // We are guaranteed that this.maxSize >= 1,\n        // so this.map.size is guaranteed to be >= 2,\n        // so this.first and this.last must be different valid ListNodes,\n        // and this.last.prev must also be a valid ListNode (possibly this.first).\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var last = this.last;\n        this.map[\"delete\"](last.key);\n        this.last = last.prev; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.last.next = undefined;\n      }\n    }\n  }]);\n\n  return LRUCache;\n}();\n/**\r\n * A node in a doubly linked list.\r\n */\n\nvar ListNode = /*#__PURE__*/_createClass(function ListNode(key, value) {\n  _classCallCheck(this, ListNode);\n\n  this.next = undefined;\n  this.prev = undefined;\n  this.key = key;\n  this.value = value;\n});\n\nvar MAX_SIGNIFICANT_DIGITS = 17; //Maximum number of digits of precision to assume in Number\n\nvar EXP_LIMIT = 9e15; //If we're ABOVE this value, increase a layer. (9e15 is close to the largest integer that can fit in a Number.)\n\nvar LAYER_DOWN = Math.log10(9e15);\nvar FIRST_NEG_LAYER = 1 / 9e15; //At layer 0, smaller non-zero numbers than this become layer 1 numbers with negative mag. After that the pattern continues as normal.\n\nvar NUMBER_EXP_MAX = 308; //The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; //The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar MAX_ES_IN_A_ROW = 5; //For default toString behaviour, when to swap from eee... to (e^n) syntax.\n\nvar DEFAULT_FROM_STRING_CACHE_SIZE = (1 << 10) - 1; // The default size of the LRU cache used to cache Decimal.fromString.\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}(); //tetration/slog to real height stuff\n//background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\n\n\nvar critical_headers = [2, Math.E, 3, 4, 5, 6, 7, 8, 9, 10];\nvar critical_tetr_values = [[// Base 2 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.0891180521811202527, 1.1789767925673958433, 1.2701455431742086633, 1.3632090180450091941, 1.4587818160364217007, 1.5575237916251418333, 1.6601571006859253673, 1.7674858188369780435, 1.8804192098842727359, 2], [// Base E (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.1121114330934078681, 1.2310389249316089299, 1.3583836963111376089, 1.4960519303993531879, 1.6463542337511945810, 1.8121385357018724464, 1.9969713246183068478, 2.2053895545527544330, 2.4432574483385252544, Math.E //1.0\n], [// Base 3\n1, 1.1187738849693603, 1.2464963939368214, 1.38527004705667, 1.5376664685821402, 1.7068895236551784, 1.897001227148399, 2.1132403089001035, 2.362480153784171, 2.6539010333870774, 3], [// Base 4\n1, 1.1367350847096405, 1.2889510672956703, 1.4606478703324786, 1.6570295196661111, 1.8850062585672889, 2.1539465047453485, 2.476829779693097, 2.872061932789197, 3.3664204535587183, 4], [// Base 5\n1, 1.1494592900767588, 1.319708228183931, 1.5166291280087583, 1.748171114438024, 2.0253263297298045, 2.3636668498288547, 2.7858359149579424, 3.3257226212448145, 4.035730287722532, 5], [// Base 6\n1, 1.159225940787673, 1.343712473580932, 1.5611293155111927, 1.8221199554561318, 2.14183924486326, 2.542468319282638, 3.0574682501653316, 3.7390572020926873, 4.6719550537360774, 6], [// Base 7\n1, 1.1670905356972596, 1.3632807444991446, 1.5979222279405536, 1.8842640123816674, 2.2416069644878687, 2.69893426559423, 3.3012632110403577, 4.121250340630164, 5.281493033448316, 7], [// Base 8\n1, 1.1736630594087796, 1.379783782386201, 1.6292821855668218, 1.9378971836180754, 2.3289975651071977, 2.8384347394720835, 3.5232708454565906, 4.478242031114584, 5.868592169644505, 8], [// Base 9\n1, 1.1793017514670474, 1.394054150657457, 1.65664127441059, 1.985170999970283, 2.4069682290577457, 2.9647310119960752, 3.7278665320924946, 4.814462547283592, 6.436522247411611, 9], [// Base 10 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.1840100246247336579, 1.4061375836156954169, 1.6802272208863963918, 2.026757028388618927, 2.4770056063449647580, 3.0805252717554819987, 3.9191964192627283911, 5.1351528408331864230, 6.9899611795347148455, 10]];\nvar critical_slog_values = [[// Base 2\n-1, -0.9194161097107025, -0.8335625019330468, -0.7425599821143978, -0.6466611521029437, -0.5462617907227869, -0.4419033816638769, -0.3342645487554494, -0.224140440909962, -0.11241087890006762, 0], [// Base E\n-1, -0.90603157029014, -0.80786507256596, -0.7064666939634, -0.60294836853664, -0.49849837513117, -0.39430303318768, -0.29147201034755, -0.19097820800866, -0.09361896280296, 0 //1.0\n], [// Base 3\n-1, -0.9021579584316141, -0.8005762598234203, -0.6964780623319391, -0.5911906810998454, -0.486050182576545, -0.3823089430815083, -0.28106046722897615, -0.1831906535795894, -0.08935809204418144, 0], [// Base 4\n-1, -0.8917227442365535, -0.781258746326964, -0.6705130326902455, -0.5612813129406509, -0.4551067709033134, -0.35319256652135966, -0.2563741554088552, -0.1651412821106526, -0.0796919581982668, 0], [// Base 5\n-1, -0.8843387974366064, -0.7678744063886243, -0.6529563724510552, -0.5415870994657841, -0.4352842206588936, -0.33504449124791424, -0.24138853420685147, -0.15445285440944467, -0.07409659641336663, 0], [// Base 6\n-1, -0.8786709358426346, -0.7577735191184886, -0.6399546189952064, -0.527284921869926, -0.4211627631006314, -0.3223479611761232, -0.23107655627789858, -0.1472057700818259, -0.07035171210706326, 0], [// Base 7\n-1, -0.8740862815291583, -0.7497032990976209, -0.6297119746181752, -0.5161838335958787, -0.41036238255751956, -0.31277212146489963, -0.2233976621705518, -0.1418697367979619, -0.06762117662323441, 0], [// Base 8\n-1, -0.8702632331800649, -0.7430366914122081, -0.6213373075161548, -0.5072025698095242, -0.40171437727184167, -0.30517930701410456, -0.21736343968190863, -0.137710238299109, -0.06550774483471955, 0], [// Base 9\n-1, -0.8670016295947213, -0.7373984232432306, -0.6143173985094293, -0.49973884395492807, -0.394584953527678, -0.2989649949848695, -0.21245647317021688, -0.13434688362382652, -0.0638072667348083, 0], [// Base 10\n-1, -0.8641642839543857, -0.732534623168535, -0.6083127477059322, -0.4934049257184696, -0.3885773075899922, -0.29376029055315767, -0.2083678561173622, -0.13155653399373268, -0.062401588652553186, 0]];\n\nvar D = function D(value) {\n  return Decimal.fromValue_noAlloc(value);\n};\n\nvar FC = function FC(sign, layer, mag) {\n  return Decimal.fromComponents(sign, layer, mag);\n};\n\nvar FC_NN = function FC_NN(sign, layer, mag) {\n  return Decimal.fromComponents_noNormalize(sign, layer, mag);\n}; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nvar decimalPlaces = function decimalPlaces(value, places) {\n  var len = places + 1;\n  var numDigits = Math.ceil(Math.log10(Math.abs(value)));\n  var rounded = Math.round(value * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n  return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n};\n\nvar f_maglog10 = function f_maglog10(n) {\n  return Math.sign(n) * Math.log10(Math.abs(n));\n}; //from HyperCalc source code\n\n\nvar f_gamma = function f_gamma(n) {\n  if (!isFinite(n)) {\n    return n;\n  }\n\n  if (n < -50) {\n    if (n === Math.trunc(n)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    return 0;\n  }\n\n  var scal1 = 1;\n\n  while (n < 10) {\n    scal1 = scal1 * n;\n    ++n;\n  }\n\n  n -= 1;\n  var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\n\n  l = l + (n + 0.5) * Math.log(n);\n  l = l - n;\n  var n2 = n * n;\n  var np = n;\n  l = l + 1 / (12 * np);\n  np = np * n2;\n  l = l + 1 / (360 * np);\n  np = np * n2;\n  l = l + 1 / (1260 * np);\n  np = np * n2;\n  l = l + 1 / (1680 * np);\n  np = np * n2;\n  l = l + 1 / (1188 * np);\n  np = np * n2;\n  l = l + 691 / (360360 * np);\n  np = np * n2;\n  l = l + 7 / (1092 * np);\n  np = np * n2;\n  l = l + 3617 / (122400 * np);\n  return Math.exp(l) / scal1;\n};\n\nvar OMEGA = 0.56714329040978387299997; // W(1, 0)\n//from https://math.stackexchange.com/a/465183\n// The evaluation can become inaccurate very close to the branch point\n\nvar f_lambertw = function f_lambertw(z) {\n  var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\n  var w;\n  var wn;\n\n  if (!Number.isFinite(z)) {\n    return z;\n  }\n\n  if (z === 0) {\n    return z;\n  }\n\n  if (z === 1) {\n    return OMEGA;\n  }\n\n  if (z < 10) {\n    w = 0;\n  } else {\n    w = Math.log(z) - Math.log(Math.log(z));\n  }\n\n  for (var i = 0; i < 100; ++i) {\n    wn = (z * Math.exp(-w) + w * w) / (w + 1);\n\n    if (Math.abs(wn - w) < tol * Math.abs(wn)) {\n      return wn;\n    } else {\n      w = wn;\n    }\n  }\n\n  throw Error(\"Iteration failed to converge: \".concat(z.toString())); //return Number.NaN;\n}; //from https://github.com/scipy/scipy/blob/8dba340293fe20e62e173bdf2c10ae208286692f/scipy/special/lambertw.pxd\n// The evaluation can become inaccurate very close to the branch point\n// at ``-1/e``. In some corner cases, `lambertw` might currently\n// fail to converge, or can end up on the wrong branch.\n\n\nfunction d_lambertw(z) {\n  var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\n  var w;\n  var ew, wewz, wn;\n\n  if (!Number.isFinite(z.mag)) {\n    return z;\n  }\n\n  if (z.eq(Decimal.dZero)) {\n    return z;\n  }\n\n  if (z.eq(Decimal.dOne)) {\n    //Split out this case because the asymptotic series blows up\n    return Decimal.fromNumber(OMEGA);\n  } //Get an initial guess for Halley's method\n\n\n  w = Decimal.ln(z); //Halley's method; see 5.9 in [1]\n\n  for (var i = 0; i < 100; ++i) {\n    ew = w.neg().exp();\n    wewz = w.sub(z.mul(ew));\n    wn = w.sub(wewz.div(w.add(1).sub(w.add(2).mul(wewz).div(Decimal.mul(2, w).add(2)))));\n\n    if (Decimal.abs(wn.sub(w)).lt(Decimal.abs(wn).mul(tol))) {\n      return wn;\n    } else {\n      w = wn;\n    }\n  }\n\n  throw Error(\"Iteration failed to converge: \".concat(z.toString())); //return Decimal.dNaN;\n}\n/**\r\n * The Decimal's value is simply mantissa * 10^exponent.\r\n */\n\n\nvar Decimal = /*#__PURE__*/function () {\n  function Decimal(value) {\n    _classCallCheck(this, Decimal);\n\n    this.sign = 0;\n    this.mag = 0;\n    this.layer = 0;\n\n    if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else if (typeof value === \"string\") {\n      this.fromString(value);\n    }\n  }\n\n  _createClass(Decimal, [{\n    key: \"m\",\n    get: function get() {\n      if (this.sign === 0) {\n        return 0;\n      } else if (this.layer === 0) {\n        var exp = Math.floor(Math.log10(this.mag)); //handle special case 5e-324\n\n        var man;\n\n        if (this.mag === 5e-324) {\n          man = 5;\n        } else {\n          man = this.mag / powerOf10(exp);\n        }\n\n        return this.sign * man;\n      } else if (this.layer === 1) {\n        var residue = this.mag - Math.floor(this.mag);\n        return this.sign * Math.pow(10, residue);\n      } else {\n        //mantissa stops being relevant past 1e9e15 / ee15.954\n        return this.sign;\n      }\n    },\n    set: function set(value) {\n      if (this.layer <= 2) {\n        this.fromMantissaExponent(value, this.e);\n      } else {\n        //don't even pretend mantissa is meaningful\n        this.sign = Math.sign(value);\n\n        if (this.sign === 0) {\n          this.layer = 0;\n          this.exponent = 0;\n        }\n      }\n    }\n  }, {\n    key: \"e\",\n    get: function get() {\n      if (this.sign === 0) {\n        return 0;\n      } else if (this.layer === 0) {\n        return Math.floor(Math.log10(this.mag));\n      } else if (this.layer === 1) {\n        return Math.floor(this.mag);\n      } else if (this.layer === 2) {\n        return Math.floor(Math.sign(this.mag) * Math.pow(10, Math.abs(this.mag)));\n      } else {\n        return this.mag * Number.POSITIVE_INFINITY;\n      }\n    },\n    set: function set(value) {\n      this.fromMantissaExponent(this.m, value);\n    }\n  }, {\n    key: \"s\",\n    get: function get() {\n      return this.sign;\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n      } else {\n        this.sign = value;\n      }\n    } // Object.defineProperty(Decimal.prototype, \"mantissa\", {\n\n  }, {\n    key: \"mantissa\",\n    get: function get() {\n      return this.m;\n    },\n    set: function set(value) {\n      this.m = value;\n    }\n  }, {\n    key: \"exponent\",\n    get: function get() {\n      return this.e;\n    },\n    set: function set(value) {\n      this.e = value;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      /*\r\n      PSEUDOCODE:\r\n      Whenever we are partially 0 (sign is 0 or mag and layer is 0), make it fully 0.\r\n      Whenever we are at or hit layer 0, extract sign from negative mag.\r\n      If layer === 0 and mag < FIRST_NEG_LAYER (1/9e15), shift to 'first negative layer' (add layer, log10 mag).\r\n      While abs(mag) > EXP_LIMIT (9e15), layer += 1, mag = maglog10(mag).\r\n      While abs(mag) < LAYER_DOWN (15.954) and layer > 0, layer -= 1, mag = pow(10, mag).\r\n            When we're done, all of the following should be true OR one of the numbers is not IsFinite OR layer is not IsInteger (error state):\r\n      Any 0 is totally zero (0, 0, 0).\r\n      Anything layer 0 has mag 0 OR mag > 1/9e15 and < 9e15.\r\n      Anything layer 1 or higher has abs(mag) >= 15.954 and < 9e15.\r\n      We will assume in calculations that all Decimals are either erroneous or satisfy these criteria. (Otherwise: Garbage in, garbage out.)\r\n      */\n      if (this.sign === 0 || this.mag === 0 && this.layer === 0) {\n        this.sign = 0;\n        this.mag = 0;\n        this.layer = 0;\n        return this;\n      }\n\n      if (this.layer === 0 && this.mag < 0) {\n        //extract sign from negative mag at layer 0\n        this.mag = -this.mag;\n        this.sign = -this.sign;\n      } //Handle shifting from layer 0 to negative layers.\n\n\n      if (this.layer === 0 && this.mag < FIRST_NEG_LAYER) {\n        this.layer += 1;\n        this.mag = Math.log10(this.mag);\n        return this;\n      }\n\n      var absmag = Math.abs(this.mag);\n      var signmag = Math.sign(this.mag);\n\n      if (absmag >= EXP_LIMIT) {\n        this.layer += 1;\n        this.mag = signmag * Math.log10(absmag);\n        return this;\n      } else {\n        while (absmag < LAYER_DOWN && this.layer > 0) {\n          this.layer -= 1;\n\n          if (this.layer === 0) {\n            this.mag = Math.pow(10, this.mag);\n          } else {\n            this.mag = signmag * Math.pow(10, absmag);\n            absmag = Math.abs(this.mag);\n            signmag = Math.sign(this.mag);\n          }\n        }\n\n        if (this.layer === 0) {\n          if (this.mag < 0) {\n            //extract sign from negative mag at layer 0\n            this.mag = -this.mag;\n            this.sign = -this.sign;\n          } else if (this.mag === 0) {\n            //excessive rounding can give us all zeroes\n            this.sign = 0;\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromComponents\",\n    value: function fromComponents(sign, layer, mag) {\n      this.sign = sign;\n      this.layer = layer;\n      this.mag = mag;\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromComponents_noNormalize\",\n    value: function fromComponents_noNormalize(sign, layer, mag) {\n      this.sign = sign;\n      this.layer = layer;\n      this.mag = mag;\n      return this;\n    }\n  }, {\n    key: \"fromMantissaExponent\",\n    value: function fromMantissaExponent(mantissa, exponent) {\n      this.layer = 1;\n      this.sign = Math.sign(mantissa);\n      mantissa = Math.abs(mantissa);\n      this.mag = exponent + Math.log10(mantissa);\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromMantissaExponent_noNormalize\",\n    value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\n      //The idea of 'normalizing' a break_infinity.js style Decimal doesn't really apply. So just do the same thing.\n      this.fromMantissaExponent(mantissa, exponent);\n      return this;\n    }\n  }, {\n    key: \"fromDecimal\",\n    value: function fromDecimal(value) {\n      this.sign = value.sign;\n      this.layer = value.layer;\n      this.mag = value.mag;\n      return this;\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(value) {\n      this.mag = Math.abs(value);\n      this.sign = Math.sign(value);\n      this.layer = 0;\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value) {\n      var originalValue = value;\n      var cached = Decimal.fromStringCache.get(originalValue);\n\n      if (cached !== undefined) {\n        return this.fromDecimal(cached);\n      }\n\n      {\n        value = value.replace(\",\", \"\");\n      } //Handle x^^^y format.\n\n\n      var pentationparts = value.split(\"^^^\");\n\n      if (pentationparts.length === 2) {\n        var _base = parseFloat(pentationparts[0]);\n\n        var _height = parseFloat(pentationparts[1]);\n\n        var heightparts = pentationparts[1].split(\";\");\n        var payload = 1;\n\n        if (heightparts.length === 2) {\n          payload = parseFloat(heightparts[1]);\n\n          if (!isFinite(payload)) {\n            payload = 1;\n          }\n        }\n\n        if (isFinite(_base) && isFinite(_height)) {\n          var result = Decimal.pentate(_base, _height, payload);\n          this.sign = result.sign;\n          this.layer = result.layer;\n          this.mag = result.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle x^^y format.\n\n\n      var tetrationparts = value.split(\"^^\");\n\n      if (tetrationparts.length === 2) {\n        var _base2 = parseFloat(tetrationparts[0]);\n\n        var _height2 = parseFloat(tetrationparts[1]);\n\n        var _heightparts = tetrationparts[1].split(\";\");\n\n        var _payload = 1;\n\n        if (_heightparts.length === 2) {\n          _payload = parseFloat(_heightparts[1]);\n\n          if (!isFinite(_payload)) {\n            _payload = 1;\n          }\n        }\n\n        if (isFinite(_base2) && isFinite(_height2)) {\n          var _result = Decimal.tetrate(_base2, _height2, _payload);\n\n          this.sign = _result.sign;\n          this.layer = _result.layer;\n          this.mag = _result.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle x^y format.\n\n\n      var powparts = value.split(\"^\");\n\n      if (powparts.length === 2) {\n        var _base3 = parseFloat(powparts[0]);\n\n        var _exponent = parseFloat(powparts[1]);\n\n        if (isFinite(_base3) && isFinite(_exponent)) {\n          var _result2 = Decimal.pow(_base3, _exponent);\n\n          this.sign = _result2.sign;\n          this.layer = _result2.layer;\n          this.mag = _result2.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle various cases involving it being a Big Number.\n\n\n      value = value.trim().toLowerCase(); //handle X PT Y format.\n\n      var base;\n      var height;\n      var ptparts = value.split(\"pt\");\n\n      if (ptparts.length === 2) {\n        base = 10;\n        height = parseFloat(ptparts[0]);\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\n\n        var _payload2 = parseFloat(ptparts[1]);\n\n        if (!isFinite(_payload2)) {\n          _payload2 = 1;\n        }\n\n        if (isFinite(base) && isFinite(height)) {\n          var _result3 = Decimal.tetrate(base, height, _payload2);\n\n          this.sign = _result3.sign;\n          this.layer = _result3.layer;\n          this.mag = _result3.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //handle XpY format (it's the same thing just with p).\n\n\n      ptparts = value.split(\"p\");\n\n      if (ptparts.length === 2) {\n        base = 10;\n        height = parseFloat(ptparts[0]);\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\n\n        var _payload3 = parseFloat(ptparts[1]);\n\n        if (!isFinite(_payload3)) {\n          _payload3 = 1;\n        }\n\n        if (isFinite(base) && isFinite(height)) {\n          var _result4 = Decimal.tetrate(base, height, _payload3);\n\n          this.sign = _result4.sign;\n          this.layer = _result4.layer;\n          this.mag = _result4.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      }\n\n      var parts = value.split(\"e\");\n      var ecount = parts.length - 1; //Handle numbers that are exactly floats (0 or 1 es).\n\n      if (ecount === 0) {\n        var numberAttempt = parseFloat(value);\n\n        if (isFinite(numberAttempt)) {\n          this.fromNumber(numberAttempt);\n\n          if (Decimal.fromStringCache.size >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } else if (ecount === 1) {\n        //Very small numbers (\"2e-3000\" and so on) may look like valid floats but round to 0.\n        var _numberAttempt = parseFloat(value);\n\n        if (isFinite(_numberAttempt) && _numberAttempt !== 0) {\n          this.fromNumber(_numberAttempt);\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle new (e^N)X format.\n\n\n      var newparts = value.split(\"e^\");\n\n      if (newparts.length === 2) {\n        this.sign = 1;\n\n        if (newparts[0].charAt(0) == \"-\") {\n          this.sign = -1;\n        }\n\n        var layerstring = \"\";\n\n        for (var i = 0; i < newparts[1].length; ++i) {\n          var chrcode = newparts[1].charCodeAt(i);\n\n          if (chrcode >= 43 && chrcode <= 57 || chrcode === 101) {\n            //is \"0\" to \"9\" or \"+\" or \"-\" or \".\" or \"e\" (or \",\" or \"/\")\n            layerstring += newparts[1].charAt(i);\n          } //we found the end of the layer count\n          else {\n            this.layer = parseFloat(layerstring);\n            this.mag = parseFloat(newparts[1].substr(i + 1));\n            this.normalize();\n\n            if (Decimal.fromStringCache.maxSize >= 1) {\n              Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n            }\n\n            return this;\n          }\n        }\n      }\n\n      if (ecount < 1) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n\n        if (Decimal.fromStringCache.maxSize >= 1) {\n          Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n        }\n\n        return this;\n      }\n\n      var mantissa = parseFloat(parts[0]);\n\n      if (mantissa === 0) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n\n        if (Decimal.fromStringCache.maxSize >= 1) {\n          Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n        }\n\n        return this;\n      }\n\n      var exponent = parseFloat(parts[parts.length - 1]); //handle numbers like AeBeC and AeeeeBeC\n\n      if (ecount >= 2) {\n        var me = parseFloat(parts[parts.length - 2]);\n\n        if (isFinite(me)) {\n          exponent *= Math.sign(me);\n          exponent += f_maglog10(me);\n        }\n      } //Handle numbers written like eee... (N es) X\n\n\n      if (!isFinite(mantissa)) {\n        this.sign = parts[0] === \"-\" ? -1 : 1;\n        this.layer = ecount;\n        this.mag = exponent;\n      } //Handle numbers written like XeY\n      else if (ecount === 1) {\n        this.sign = Math.sign(mantissa);\n        this.layer = 1; //Example: 2e10 is equal to 10^log10(2e10) which is equal to 10^(10+log10(2))\n\n        this.mag = exponent + Math.log10(Math.abs(mantissa));\n      } //Handle numbers written like Xeee... (N es) Y\n      else {\n        this.sign = Math.sign(mantissa);\n        this.layer = ecount;\n\n        if (ecount === 2) {\n          var _result5 = Decimal.mul(FC(1, 2, exponent), D(mantissa));\n\n          this.sign = _result5.sign;\n          this.layer = _result5.layer;\n          this.mag = _result5.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        } else {\n          //at eee and above, mantissa is too small to be recognizable!\n          this.mag = exponent;\n        }\n      }\n\n      this.normalize();\n\n      if (Decimal.fromStringCache.maxSize >= 1) {\n        Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromValue\",\n    value: function fromValue(value) {\n      if (value instanceof Decimal) {\n        return this.fromDecimal(value);\n      }\n\n      if (typeof value === \"number\") {\n        return this.fromNumber(value);\n      }\n\n      if (typeof value === \"string\") {\n        return this.fromString(value);\n      }\n\n      this.sign = 0;\n      this.layer = 0;\n      this.mag = 0;\n      return this;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (!Number.isFinite(this.layer)) {\n        return Number.NaN;\n      }\n\n      if (this.layer === 0) {\n        return this.sign * this.mag;\n      } else if (this.layer === 1) {\n        return this.sign * Math.pow(10, this.mag);\n      } //overflow for any normalized Decimal\n      else {\n        return this.mag > 0 ? this.sign > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : 0;\n      }\n    }\n  }, {\n    key: \"mantissaWithDecimalPlaces\",\n    value: function mantissaWithDecimalPlaces(places) {\n      // https://stackoverflow.com/a/37425022\n      if (isNaN(this.m)) {\n        return Number.NaN;\n      }\n\n      if (this.m === 0) {\n        return 0;\n      }\n\n      return decimalPlaces(this.m, places);\n    }\n  }, {\n    key: \"magnitudeWithDecimalPlaces\",\n    value: function magnitudeWithDecimalPlaces(places) {\n      // https://stackoverflow.com/a/37425022\n      if (isNaN(this.mag)) {\n        return Number.NaN;\n      }\n\n      if (this.mag === 0) {\n        return 0;\n      }\n\n      return decimalPlaces(this.mag, places);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (isNaN(this.layer) || isNaN(this.sign) || isNaN(this.mag)) {\n        return \"NaN\";\n      }\n\n      if (this.mag === Number.POSITIVE_INFINITY || this.layer === Number.POSITIVE_INFINITY) {\n        return this.sign === 1 ? \"Infinity\" : \"-Infinity\";\n      }\n\n      if (this.layer === 0) {\n        if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\n          return (this.sign * this.mag).toString();\n        }\n\n        return this.m + \"e\" + this.e;\n      } else if (this.layer === 1) {\n        return this.m + \"e\" + this.e;\n      } else {\n        //layer 2+\n        if (this.layer <= MAX_ES_IN_A_ROW) {\n          return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + this.mag;\n        } else {\n          return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + this.mag;\n        }\n      }\n    }\n  }, {\n    key: \"toExponential\",\n    value: function toExponential(places) {\n      if (this.layer === 0) {\n        return (this.sign * this.mag).toExponential(places);\n      }\n\n      return this.toStringWithDecimalPlaces(places);\n    }\n  }, {\n    key: \"toFixed\",\n    value: function toFixed(places) {\n      if (this.layer === 0) {\n        return (this.sign * this.mag).toFixed(places);\n      }\n\n      return this.toStringWithDecimalPlaces(places);\n    }\n  }, {\n    key: \"toPrecision\",\n    value: function toPrecision(places) {\n      if (this.e <= -7) {\n        return this.toExponential(places - 1);\n      }\n\n      if (places > this.e) {\n        return this.toFixed(places - this.exponent - 1);\n      }\n\n      return this.toExponential(places - 1);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.toString();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"toStringWithDecimalPlaces\",\n    value: function toStringWithDecimalPlaces(places) {\n      if (this.layer === 0) {\n        if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\n          return (this.sign * this.mag).toFixed(places);\n        }\n\n        return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\n      } else if (this.layer === 1) {\n        return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\n      } else {\n        //layer 2+\n        if (this.layer <= MAX_ES_IN_A_ROW) {\n          return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + decimalPlaces(this.mag, places);\n        } else {\n          return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + decimalPlaces(this.mag, places);\n        }\n      }\n    }\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      return FC_NN(this.sign === 0 ? 0 : 1, this.layer, this.mag);\n    }\n  }, {\n    key: \"neg\",\n    value: function neg() {\n      return FC_NN(-this.sign, this.layer, this.mag);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this.neg();\n    }\n  }, {\n    key: \"negated\",\n    value: function negated() {\n      return this.neg();\n    } // public sign () {\n    //     return this.sign;\n    //   }\n\n  }, {\n    key: \"sgn\",\n    value: function sgn() {\n      return this.sign;\n    }\n  }, {\n    key: \"round\",\n    value: function round() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.round(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.floor(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.ceil(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"trunc\",\n    value: function trunc() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.trunc(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      var decimal = D(value); //inf/nan check\n\n      if (!Number.isFinite(this.layer)) {\n        return this;\n      }\n\n      if (!Number.isFinite(decimal.layer)) {\n        return decimal;\n      } //Special case - if one of the numbers is 0, return the other number.\n\n\n      if (this.sign === 0) {\n        return decimal;\n      }\n\n      if (decimal.sign === 0) {\n        return this;\n      } //Special case - Adding a number to its negation produces 0, no matter how large.\n\n\n      if (this.sign === -decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag) {\n        return FC_NN(0, 0, 0);\n      }\n\n      var a;\n      var b; //Special case: If one of the numbers is layer 2 or higher, just take the bigger number.\n\n      if (this.layer >= 2 || decimal.layer >= 2) {\n        return this.maxabs(decimal);\n      }\n\n      if (Decimal.cmpabs(this, decimal) > 0) {\n        a = this;\n        b = decimal;\n      } else {\n        a = decimal;\n        b = this;\n      }\n\n      if (a.layer === 0 && b.layer === 0) {\n        return Decimal.fromNumber(a.sign * a.mag + b.sign * b.mag);\n      }\n\n      var layera = a.layer * Math.sign(a.mag);\n      var layerb = b.layer * Math.sign(b.mag); //If one of the numbers is 2+ layers higher than the other, just take the bigger number.\n\n      if (layera - layerb >= 2) {\n        return a;\n      }\n\n      if (layera === 0 && layerb === -1) {\n        if (Math.abs(b.mag - Math.log10(a.mag)) > MAX_SIGNIFICANT_DIGITS) {\n          return a;\n        } else {\n          var magdiff = Math.pow(10, Math.log10(a.mag) - b.mag);\n          var mantissa = b.sign + a.sign * magdiff;\n          return FC(Math.sign(mantissa), 1, b.mag + Math.log10(Math.abs(mantissa)));\n        }\n      }\n\n      if (layera === 1 && layerb === 0) {\n        if (Math.abs(a.mag - Math.log10(b.mag)) > MAX_SIGNIFICANT_DIGITS) {\n          return a;\n        } else {\n          var _magdiff = Math.pow(10, a.mag - Math.log10(b.mag));\n\n          var _mantissa = b.sign + a.sign * _magdiff;\n\n          return FC(Math.sign(_mantissa), 1, Math.log10(b.mag) + Math.log10(Math.abs(_mantissa)));\n        }\n      }\n\n      if (Math.abs(a.mag - b.mag) > MAX_SIGNIFICANT_DIGITS) {\n        return a;\n      } else {\n        var _magdiff2 = Math.pow(10, a.mag - b.mag);\n\n        var _mantissa2 = b.sign + a.sign * _magdiff2;\n\n        return FC(Math.sign(_mantissa2), 1, b.mag + Math.log10(Math.abs(_mantissa2)));\n      }\n    }\n  }, {\n    key: \"plus\",\n    value: function plus(value) {\n      return this.add(value);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(value) {\n      return this.add(D(value).neg());\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value) {\n      return this.sub(value);\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(value) {\n      return this.sub(value);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value) {\n      var decimal = D(value); //inf/nan check\n\n      if (!Number.isFinite(this.layer)) {\n        return this;\n      }\n\n      if (!Number.isFinite(decimal.layer)) {\n        return decimal;\n      } //Special case - if one of the numbers is 0, return 0.\n\n\n      if (this.sign === 0 || decimal.sign === 0) {\n        return FC_NN(0, 0, 0);\n      } //Special case - Multiplying a number by its own reciprocal yields +/- 1, no matter how large.\n\n\n      if (this.layer === decimal.layer && this.mag === -decimal.mag) {\n        return FC_NN(this.sign * decimal.sign, 0, 1);\n      }\n\n      var a;\n      var b; //Which number is bigger in terms of its multiplicative distance from 1?\n\n      if (this.layer > decimal.layer || this.layer == decimal.layer && Math.abs(this.mag) > Math.abs(decimal.mag)) {\n        a = this;\n        b = decimal;\n      } else {\n        a = decimal;\n        b = this;\n      }\n\n      if (a.layer === 0 && b.layer === 0) {\n        return Decimal.fromNumber(a.sign * b.sign * a.mag * b.mag);\n      } //Special case: If one of the numbers is layer 3 or higher or one of the numbers is 2+ layers bigger than the other, just take the bigger number.\n\n\n      if (a.layer >= 3 || a.layer - b.layer >= 2) {\n        return FC(a.sign * b.sign, a.layer, a.mag);\n      }\n\n      if (a.layer === 1 && b.layer === 0) {\n        return FC(a.sign * b.sign, 1, a.mag + Math.log10(b.mag));\n      }\n\n      if (a.layer === 1 && b.layer === 1) {\n        return FC(a.sign * b.sign, 1, a.mag + b.mag);\n      }\n\n      if (a.layer === 2 && b.layer === 1) {\n        var newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\n        return FC(a.sign * b.sign, newmag.layer + 1, newmag.sign * newmag.mag);\n      }\n\n      if (a.layer === 2 && b.layer === 2) {\n        var _newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\n\n        return FC(a.sign * b.sign, _newmag.layer + 1, _newmag.sign * _newmag.mag);\n      }\n\n      throw Error(\"Bad arguments to mul: \" + this + \", \" + value);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(value) {\n      return this.mul(value);\n    }\n  }, {\n    key: \"times\",\n    value: function times(value) {\n      return this.mul(value);\n    }\n  }, {\n    key: \"div\",\n    value: function div(value) {\n      var decimal = D(value);\n      return this.mul(decimal.recip());\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"divideBy\",\n    value: function divideBy(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"dividedBy\",\n    value: function dividedBy(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"recip\",\n    value: function recip() {\n      if (this.mag === 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, 1 / this.mag);\n      } else {\n        return FC(this.sign, this.layer, -this.mag);\n      }\n    }\n  }, {\n    key: \"reciprocal\",\n    value: function reciprocal() {\n      return this.recip();\n    }\n  }, {\n    key: \"reciprocate\",\n    value: function reciprocate() {\n      return this.recip();\n    }\n    /**\r\n     * -1 for less than value, 0 for equals value, 1 for greater than value\r\n     */\n\n  }, {\n    key: \"cmp\",\n    value: function cmp(value) {\n      var decimal = D(value);\n\n      if (this.sign > decimal.sign) {\n        return 1;\n      }\n\n      if (this.sign < decimal.sign) {\n        return -1;\n      }\n\n      return this.sign * this.cmpabs(value);\n    }\n  }, {\n    key: \"cmpabs\",\n    value: function cmpabs(value) {\n      var decimal = D(value);\n      var layera = this.mag > 0 ? this.layer : -this.layer;\n      var layerb = decimal.mag > 0 ? decimal.layer : -decimal.layer;\n\n      if (layera > layerb) {\n        return 1;\n      }\n\n      if (layera < layerb) {\n        return -1;\n      }\n\n      if (this.mag > decimal.mag) {\n        return 1;\n      }\n\n      if (this.mag < decimal.mag) {\n        return -1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(value) {\n      return this.cmp(value);\n    }\n  }, {\n    key: \"isNan\",\n    value: function isNan() {\n      return isNaN(this.sign) || isNaN(this.layer) || isNaN(this.mag);\n    }\n  }, {\n    key: \"isFinite\",\n    value: function (_isFinite2) {\n      function isFinite() {\n        return _isFinite2.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite2.toString();\n      };\n\n      return isFinite;\n    }(function () {\n      return isFinite(this.sign) && isFinite(this.layer) && isFinite(this.mag);\n    })\n  }, {\n    key: \"eq\",\n    value: function eq(value) {\n      var decimal = D(value);\n      return this.sign === decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(value) {\n      return this.eq(value);\n    }\n  }, {\n    key: \"neq\",\n    value: function neq(value) {\n      return !this.eq(value);\n    }\n  }, {\n    key: \"notEquals\",\n    value: function notEquals(value) {\n      return this.neq(value);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(value) {\n      return this.cmp(value) === -1;\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(value) {\n      return !this.gt(value);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(value) {\n      return this.cmp(value) === 1;\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(value) {\n      return !this.lt(value);\n    }\n  }, {\n    key: \"max\",\n    value: function max(value) {\n      var decimal = D(value);\n      return this.lt(decimal) ? decimal : this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(value) {\n      var decimal = D(value);\n      return this.gt(decimal) ? decimal : this;\n    }\n  }, {\n    key: \"maxabs\",\n    value: function maxabs(value) {\n      var decimal = D(value);\n      return this.cmpabs(decimal) < 0 ? decimal : this;\n    }\n  }, {\n    key: \"minabs\",\n    value: function minabs(value) {\n      var decimal = D(value);\n      return this.cmpabs(decimal) > 0 ? decimal : this;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(min, max) {\n      return this.max(min).min(max);\n    }\n  }, {\n    key: \"clampMin\",\n    value: function clampMin(min) {\n      return this.max(min);\n    }\n  }, {\n    key: \"clampMax\",\n    value: function clampMax(max) {\n      return this.min(max);\n    }\n  }, {\n    key: \"cmp_tolerance\",\n    value: function cmp_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n    }\n  }, {\n    key: \"compare_tolerance\",\n    value: function compare_tolerance(value, tolerance) {\n      return this.cmp_tolerance(value, tolerance);\n    }\n    /**\r\n     * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n     * For example, if you put in 1e-9, then any number closer to the\r\n     * larger number than (larger number)*1e-9 will be considered equal.\r\n     */\n\n  }, {\n    key: \"eq_tolerance\",\n    value: function eq_tolerance(value, tolerance) {\n      var decimal = D(value); // https://stackoverflow.com/a/33024979\n\n      if (tolerance == null) {\n        tolerance = 1e-7;\n      } //Numbers that are too far away are never close.\n\n\n      if (this.sign !== decimal.sign) {\n        return false;\n      }\n\n      if (Math.abs(this.layer - decimal.layer) > 1) {\n        return false;\n      } // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n\n      var magA = this.mag;\n      var magB = decimal.mag;\n\n      if (this.layer > decimal.layer) {\n        magB = f_maglog10(magB);\n      }\n\n      if (this.layer < decimal.layer) {\n        magA = f_maglog10(magA);\n      }\n\n      return Math.abs(magA - magB) <= tolerance * Math.max(Math.abs(magA), Math.abs(magB));\n    }\n  }, {\n    key: \"equals_tolerance\",\n    value: function equals_tolerance(value, tolerance) {\n      return this.eq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"neq_tolerance\",\n    value: function neq_tolerance(value, tolerance) {\n      return !this.eq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"notEquals_tolerance\",\n    value: function notEquals_tolerance(value, tolerance) {\n      return this.neq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"lt_tolerance\",\n    value: function lt_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n    }\n  }, {\n    key: \"lte_tolerance\",\n    value: function lte_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n    }\n  }, {\n    key: \"gt_tolerance\",\n    value: function gt_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n    }\n  }, {\n    key: \"gte_tolerance\",\n    value: function gte_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n    }\n  }, {\n    key: \"pLog10\",\n    value: function pLog10() {\n      if (this.lt(Decimal.dZero)) {\n        return Decimal.dZero;\n      }\n\n      return this.log10();\n    }\n  }, {\n    key: \"absLog10\",\n    value: function absLog10() {\n      if (this.sign === 0) {\n        return Decimal.dNaN;\n      } else if (this.layer > 0) {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      } else {\n        return FC(1, 0, Math.log10(this.mag));\n      }\n    }\n  }, {\n    key: \"log10\",\n    value: function log10() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer > 0) {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      } else {\n        return FC(this.sign, 0, Math.log10(this.mag));\n      }\n    }\n  }, {\n    key: \"log\",\n    value: function log(base) {\n      base = D(base);\n\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      }\n\n      if (base.sign <= 0) {\n        return Decimal.dNaN;\n      }\n\n      if (base.sign === 1 && base.layer === 0 && base.mag === 1) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0 && base.layer === 0) {\n        return FC(this.sign, 0, Math.log(this.mag) / Math.log(base.mag));\n      }\n\n      return Decimal.div(this.log10(), base.log10());\n    }\n  }, {\n    key: \"log2\",\n    value: function log2() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, Math.log2(this.mag));\n      } else if (this.layer === 1) {\n        return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 3.321928094887362); //log2(10)\n      } else if (this.layer === 2) {\n        return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.5213902276543247); //-log10(log10(2))\n      } else {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      }\n    }\n  }, {\n    key: \"ln\",\n    value: function ln() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, Math.log(this.mag));\n      } else if (this.layer === 1) {\n        return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 2.302585092994046); //ln(10)\n      } else if (this.layer === 2) {\n        return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.36221568869946325); //log10(log10(e))\n      } else {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      }\n    }\n  }, {\n    key: \"logarithm\",\n    value: function logarithm(base) {\n      return this.log(base);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(value) {\n      var decimal = D(value);\n      var a = this;\n      var b = decimal; //special case: if a is 0, then return 0 (UNLESS b is 0, then return 1)\n\n      if (a.sign === 0) {\n        return b.eq(0) ? FC_NN(1, 0, 1) : a;\n      } //special case: if a is 1, then return 1\n\n\n      if (a.sign === 1 && a.layer === 0 && a.mag === 1) {\n        return a;\n      } //special case: if b is 0, then return 1\n\n\n      if (b.sign === 0) {\n        return FC_NN(1, 0, 1);\n      } //special case: if b is 1, then return a\n\n\n      if (b.sign === 1 && b.layer === 0 && b.mag === 1) {\n        return a;\n      }\n\n      var result = a.absLog10().mul(b).pow10();\n\n      if (this.sign === -1) {\n        if (Math.abs(b.toNumber() % 2) % 2 === 1) {\n          return result.neg();\n        } else if (Math.abs(b.toNumber() % 2) % 2 === 0) {\n          return result;\n        }\n\n        return Decimal.dNaN;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"pow10\",\n    value: function pow10() {\n      /*\r\n      There are four cases we need to consider:\r\n      1) positive sign, positive mag (e15, ee15): +1 layer (e.g. 10^15 becomes e15, 10^e15 becomes ee15)\r\n      2) negative sign, positive mag (-e15, -ee15): +1 layer but sign and mag sign are flipped (e.g. 10^-15 becomes e-15, 10^-e15 becomes ee-15)\r\n      3) positive sign, negative mag (e-15, ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n      4) negative sign, negative mag (-e-15, -ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n      */\n      if (!Number.isFinite(this.layer) || !Number.isFinite(this.mag)) {\n        return Decimal.dNaN;\n      }\n\n      var a = this; //handle layer 0 case - if no precision is lost just use Math.pow, else promote one layer\n\n      if (a.layer === 0) {\n        var newmag = Math.pow(10, a.sign * a.mag);\n\n        if (Number.isFinite(newmag) && Math.abs(newmag) >= 0.1) {\n          return FC(1, 0, newmag);\n        } else {\n          if (a.sign === 0) {\n            return Decimal.dOne;\n          } else {\n            a = FC_NN(a.sign, a.layer + 1, Math.log10(a.mag));\n          }\n        }\n      } //handle all 4 layer 1+ cases individually\n\n\n      if (a.sign > 0 && a.mag >= 0) {\n        return FC(a.sign, a.layer + 1, a.mag);\n      }\n\n      if (a.sign < 0 && a.mag >= 0) {\n        return FC(-a.sign, a.layer + 1, -a.mag);\n      } //both the negative mag cases are identical: one +/- rounding error\n\n\n      return Decimal.dOne;\n    }\n  }, {\n    key: \"pow_base\",\n    value: function pow_base(value) {\n      return D(value).pow(this);\n    }\n  }, {\n    key: \"root\",\n    value: function root(value) {\n      var decimal = D(value);\n      return this.pow(decimal.recip());\n    }\n  }, {\n    key: \"factorial\",\n    value: function factorial() {\n      if (this.mag < 0) {\n        return this.add(1).gamma();\n      } else if (this.layer === 0) {\n        return this.add(1).gamma();\n      } else if (this.layer === 1) {\n        return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\n      } else {\n        return Decimal.exp(this);\n      }\n    } //from HyperCalc source code\n\n  }, {\n    key: \"gamma\",\n    value: function gamma() {\n      if (this.mag < 0) {\n        return this.recip();\n      } else if (this.layer === 0) {\n        if (this.lt(FC_NN(1, 0, 24))) {\n          return Decimal.fromNumber(f_gamma(this.sign * this.mag));\n        }\n\n        var t = this.mag - 1;\n        var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\n\n        l = l + (t + 0.5) * Math.log(t);\n        l = l - t;\n        var n2 = t * t;\n        var np = t;\n        var lm = 12 * np;\n        var adj = 1 / lm;\n        var l2 = l + adj;\n\n        if (l2 === l) {\n          return Decimal.exp(l);\n        }\n\n        l = l2;\n        np = np * n2;\n        lm = 360 * np;\n        adj = 1 / lm;\n        l2 = l - adj;\n\n        if (l2 === l) {\n          return Decimal.exp(l);\n        }\n\n        l = l2;\n        np = np * n2;\n        lm = 1260 * np;\n        var lt = 1 / lm;\n        l = l + lt;\n        np = np * n2;\n        lm = 1680 * np;\n        lt = 1 / lm;\n        l = l - lt;\n        return Decimal.exp(l);\n      } else if (this.layer === 1) {\n        return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\n      } else {\n        return Decimal.exp(this);\n      }\n    }\n  }, {\n    key: \"lngamma\",\n    value: function lngamma() {\n      return this.gamma().ln();\n    }\n  }, {\n    key: \"exp\",\n    value: function exp() {\n      if (this.mag < 0) {\n        return Decimal.dOne;\n      }\n\n      if (this.layer === 0 && this.mag <= 709.7) {\n        return Decimal.fromNumber(Math.exp(this.sign * this.mag));\n      } else if (this.layer === 0) {\n        return FC(1, 1, this.sign * Math.log10(Math.E) * this.mag);\n      } else if (this.layer === 1) {\n        return FC(1, 2, this.sign * (Math.log10(0.4342944819032518) + this.mag));\n      } else {\n        return FC(1, this.layer + 1, this.sign * this.mag);\n      }\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr() {\n      return this.pow(2);\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt() {\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.sqrt(this.sign * this.mag));\n      } else if (this.layer === 1) {\n        return FC(1, 2, Math.log10(this.mag) - 0.3010299956639812);\n      } else {\n        var result = Decimal.div(FC_NN(this.sign, this.layer - 1, this.mag), FC_NN(1, 0, 2));\n        result.layer += 1;\n        result.normalize();\n        return result;\n      }\n    }\n  }, {\n    key: \"cube\",\n    value: function cube() {\n      return this.pow(3);\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt() {\n      return this.pow(1 / 3);\n    } //Tetration/tetrate: The result of exponentiating 'this' to 'this' 'height' times in a row.  https://en.wikipedia.org/wiki/Tetration\n    //If payload != 1, then this is 'iterated exponentiation', the result of exping (payload) to base (this) (height) times. https://andydude.github.io/tetration/archives/tetration2/ident.html\n    //Works with negative and positive real heights.\n\n  }, {\n    key: \"tetrate\",\n    value: function tetrate() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n\n      //x^^1 == x\n      if (height === 1) {\n        return Decimal.pow(this, payload);\n      } //x^^0 == 1\n\n\n      if (height === 0) {\n        return new Decimal(payload);\n      } //1^^x == 1\n\n\n      if (this.eq(Decimal.dOne)) {\n        return Decimal.dOne;\n      } //-1^^x == -1\n\n\n      if (this.eq(-1)) {\n        return Decimal.pow(this, payload);\n      }\n\n      if (height === Number.POSITIVE_INFINITY) {\n        var this_num = this.toNumber(); //within the convergence range?\n\n        if (this_num <= 1.44466786100976613366 && this_num >= 0.06598803584531253708) {\n          //hotfix for the very edge of the number range not being handled properly\n          if (this_num > 1.444667861009099) {\n            return Decimal.fromNumber(Math.E);\n          } //Formula for infinite height power tower.\n\n\n          var negln = Decimal.ln(this).neg();\n          return negln.lambertw().div(negln);\n        } else if (this_num > 1.44466786100976613366) {\n          //explodes to infinity\n          // TODO: replace this with Decimal.dInf\n          return Decimal.fromNumber(Number.POSITIVE_INFINITY);\n        } else {\n          //0.06598803584531253708 > this_num >= 0: never converges\n          //this_num < 0: quickly becomes a complex number\n          return Decimal.dNaN;\n        }\n      } //0^^x oscillates if we define 0^0 == 1 (which in javascript land we do), since then 0^^1 is 0, 0^^2 is 1, 0^^3 is 0, etc. payload is ignored\n      //using the linear approximation for height (TODO: don't know a better way to calculate it ATM, but it wouldn't surprise me if it's just NaN)\n\n\n      if (this.eq(Decimal.dZero)) {\n        var result = Math.abs((height + 1) % 2);\n\n        if (result > 1) {\n          result = 2 - result;\n        }\n\n        return Decimal.fromNumber(result);\n      }\n\n      if (height < 0) {\n        return Decimal.iteratedlog(payload, this, -height);\n      }\n\n      payload = D(payload);\n      var oldheight = height;\n      height = Math.trunc(height);\n      var fracheight = oldheight - height;\n\n      if (this.gt(Decimal.dZero) && this.lte(1.44466786100976613366)) {\n        //similar to 0^^n, flip-flops between two values, converging slowly (or if it's below 0.06598803584531253708, never. so once again, the fractional part at the end will be a linear approximation (TODO: again pending knowledge of how to approximate better, although tbh I think it should in reality just be NaN)\n        height = Math.min(10000, height);\n\n        for (var i = 0; i < height; ++i) {\n          var old_payload = payload;\n          payload = this.pow(payload); //stop early if we converge\n\n          if (old_payload.eq(payload)) {\n            return payload;\n          }\n        }\n\n        if (fracheight != 0) {\n          var next_payload = this.pow(payload);\n          return payload.mul(1 - fracheight).add(next_payload.mul(fracheight));\n        }\n\n        return payload;\n      } //TODO: base < 0, but it's hard for me to reason about (probably all non-integer heights are NaN automatically?)\n\n\n      if (fracheight !== 0) {\n        if (payload.eq(Decimal.dOne)) {\n          //TODO: for bases above 10, revert to old linear approximation until I can think of something better\n          if (this.gt(10)) {\n            payload = this.pow(fracheight);\n          } else {\n            payload = Decimal.fromNumber(Decimal.tetrate_critical(this.toNumber(), fracheight)); //TODO: until the critical section grid can handle numbers below 2, scale them to the base\n            //TODO: maybe once the critical section grid has very large bases, this math can be appropriate for them too? I'll think about it\n\n            if (this.lt(2)) {\n              payload = payload.sub(1).mul(this.minus(1)).plus(1);\n            }\n          }\n        } else {\n          if (this.eq(10)) {\n            payload = payload.layeradd10(fracheight);\n          } else {\n            payload = payload.layeradd(fracheight, this);\n          }\n        }\n      }\n\n      for (var _i = 0; _i < height; ++_i) {\n        payload = this.pow(payload); //bail if we're NaN\n\n        if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\n          return payload.normalize();\n        } //shortcut\n\n\n        if (payload.layer - this.layer > 3) {\n          return FC_NN(payload.sign, payload.layer + (height - _i - 1), payload.mag);\n        } //give up after 10000 iterations if nothing is happening\n\n\n        if (_i > 10000) {\n          return payload;\n        }\n      }\n\n      return payload;\n    } //iteratedexp/iterated exponentiation: - all cases handled in tetrate, so just call it\n\n  }, {\n    key: \"iteratedexp\",\n    value: function iteratedexp() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n      return this.tetrate(height, payload);\n    } //iterated log/repeated log: The result of applying log(base) 'times' times in a row. Approximately equal to subtracting (times) from the number's slog representation. Equivalent to tetrating to a negative height.\n    //Works with negative and positive real heights.\n\n  }, {\n    key: \"iteratedlog\",\n    value: function iteratedlog() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      if (times < 0) {\n        return Decimal.tetrate(base, -times, this);\n      }\n\n      base = D(base);\n      var result = Decimal.fromDecimal(this);\n      var fulltimes = times;\n      times = Math.trunc(times);\n      var fraction = fulltimes - times;\n\n      if (result.layer - base.layer > 3) {\n        var layerloss = Math.min(times, result.layer - base.layer - 3);\n        times -= layerloss;\n        result.layer -= layerloss;\n      }\n\n      for (var i = 0; i < times; ++i) {\n        result = result.log(base); //bail if we're NaN\n\n        if (!isFinite(result.layer) || !isFinite(result.mag)) {\n          return result.normalize();\n        } //give up after 10000 iterations if nothing is happening\n\n\n        if (i > 10000) {\n          return result;\n        }\n      } //handle fractional part\n\n\n      if (fraction > 0 && fraction < 1) {\n        if (base.eq(10)) {\n          result = result.layeradd10(-fraction);\n        } else {\n          result = result.layeradd(-fraction, base);\n        }\n      }\n\n      return result;\n    } //Super-logarithm, one of tetration's inverses, tells you what size power tower you'd have to tetrate base to to get number. By definition, will never be higher than 1.8e308 in break_eternity.js, since a power tower 1.8e308 numbers tall is the largest representable number.\n    // https://en.wikipedia.org/wiki/Super-logarithm\n    // NEW: Accept a number of iterations, and use binary search to, after making an initial guess, hone in on the true value, assuming tetration as the ground truth.\n\n  }, {\n    key: \"slog\",\n    value: function slog() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 43;\n      var step_size = 0.001;\n      var has_changed_directions_once = false;\n      var previously_rose = false;\n      var result = this.slog_internal(base).toNumber();\n\n      for (var i = 1; i < iterations; ++i) {\n        var new_decimal = new Decimal(base).tetrate(result);\n        var currently_rose = new_decimal.gt(this);\n\n        if (iterations > 1) {\n          if (previously_rose != currently_rose) {\n            has_changed_directions_once = true;\n          }\n        }\n\n        previously_rose = currently_rose;\n\n        if (has_changed_directions_once) {\n          step_size /= 2;\n        }\n\n        step_size = Math.abs(step_size) * (currently_rose ? -1 : 1);\n        result += step_size;\n      }\n\n      return Decimal.fromNumber(result);\n    }\n  }, {\n    key: \"slog_internal\",\n    value: function slog_internal() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      base = D(base); //special cases:\n      //slog base 0 or lower is NaN\n\n      if (base.lte(Decimal.dZero)) {\n        return Decimal.dNaN;\n      } //slog base 1 is NaN\n\n\n      if (base.eq(Decimal.dOne)) {\n        return Decimal.dNaN;\n      } //need to handle these small, wobbling bases specially\n\n\n      if (base.lt(Decimal.dOne)) {\n        if (this.eq(Decimal.dOne)) {\n          return Decimal.dZero;\n        }\n\n        if (this.eq(Decimal.dZero)) {\n          return Decimal.dNegOne;\n        } //0 < this < 1: ambiguous (happens multiple times)\n        //this < 0: impossible (as far as I can tell)\n        //this > 1: partially complex (http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html base 0.25 for proof)\n\n\n        return Decimal.dNaN;\n      } //slog_n(0) is -1\n\n\n      if (this.mag < 0 || this.eq(Decimal.dZero)) {\n        return Decimal.dNegOne;\n      }\n\n      var result = 0;\n      var copy = Decimal.fromDecimal(this);\n\n      if (copy.layer - base.layer > 3) {\n        var layerloss = copy.layer - base.layer - 3;\n        result += layerloss;\n        copy.layer -= layerloss;\n      }\n\n      for (var i = 0; i < 100; ++i) {\n        if (copy.lt(Decimal.dZero)) {\n          copy = Decimal.pow(base, copy);\n          result -= 1;\n        } else if (copy.lte(Decimal.dOne)) {\n          return Decimal.fromNumber(result + Decimal.slog_critical(base.toNumber(), copy.toNumber()));\n        } else {\n          result += 1;\n          copy = Decimal.log(copy, base);\n        }\n      }\n\n      return Decimal.fromNumber(result);\n    } //background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\n\n  }, {\n    key: \"layeradd10\",\n    value: //Function for adding/removing layers from a Decimal, even fractional layers (e.g. its slog10 representation).\n    //Moved this over to use the same critical section as tetrate/slog.\n    function layeradd10(diff) {\n      diff = Decimal.fromValue_noAlloc(diff).toNumber();\n      var result = Decimal.fromDecimal(this);\n\n      if (diff >= 1) {\n        //bug fix: if result is very smol (mag < 0, layer > 0) turn it into 0 first\n        if (result.mag < 0 && result.layer > 0) {\n          result.sign = 0;\n          result.mag = 0;\n          result.layer = 0;\n        } else if (result.sign === -1 && result.layer == 0) {\n          //bug fix - for stuff like -3.layeradd10(1) we need to move the sign to the mag\n          result.sign = 1;\n          result.mag = -result.mag;\n        }\n\n        var layeradd = Math.trunc(diff);\n        diff -= layeradd;\n        result.layer += layeradd;\n      }\n\n      if (diff <= -1) {\n        var _layeradd = Math.trunc(diff);\n\n        diff -= _layeradd;\n        result.layer += _layeradd;\n\n        if (result.layer < 0) {\n          for (var i = 0; i < 100; ++i) {\n            result.layer++;\n            result.mag = Math.log10(result.mag);\n\n            if (!isFinite(result.mag)) {\n              //another bugfix: if we hit -Infinity mag, then we should return negative infinity, not 0. 0.layeradd10(-1) h its this\n              if (result.sign === 0) {\n                result.sign = 1;\n              } //also this, for 0.layeradd10(-2)\n\n\n              if (result.layer < 0) {\n                result.layer = 0;\n              }\n\n              return result.normalize();\n            }\n\n            if (result.layer >= 0) {\n              break;\n            }\n          }\n        }\n      }\n\n      while (result.layer < 0) {\n        result.layer++;\n        result.mag = Math.log10(result.mag);\n      } //bugfix: before we normalize: if we started with 0, we now need to manually fix a layer ourselves!\n\n\n      if (result.sign === 0) {\n        result.sign = 1;\n\n        if (result.mag === 0 && result.layer >= 1) {\n          result.layer -= 1;\n          result.mag = 1;\n        }\n      }\n\n      result.normalize(); //layeradd10: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 10 and iterated log base 10. Also equivalent to adding a fractional amount to the number's layer in its break_eternity.js representation.\n\n      if (diff !== 0) {\n        return result.layeradd(diff, 10); //safe, only calls positive height 1 payload tetration, slog and log\n      }\n\n      return result;\n    } //layeradd: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 'base' and iterated log base 'base'.\n\n  }, {\n    key: \"layeradd\",\n    value: function layeradd(diff, base) {\n      var slogthis = this.slog(base).toNumber();\n      var slogdest = slogthis + diff;\n\n      if (slogdest >= 0) {\n        return Decimal.tetrate(base, slogdest);\n      } else if (!Number.isFinite(slogdest)) {\n        return Decimal.dNaN;\n      } else if (slogdest >= -1) {\n        return Decimal.log(Decimal.tetrate(base, slogdest + 1), base);\n      } else {\n        return Decimal.log(Decimal.log(Decimal.tetrate(base, slogdest + 2), base), base);\n      }\n    } //The Lambert W function, also called the omega function or product logarithm, is the solution W(x) === x*e^x.\n    // https://en.wikipedia.org/wiki/Lambert_W_function\n    //Some special values, for testing: https://en.wikipedia.org/wiki/Lambert_W_function#Special_values\n\n  }, {\n    key: \"lambertw\",\n    value: function lambertw() {\n      if (this.lt(-0.3678794411710499)) {\n        throw Error(\"lambertw is unimplemented for results less than -1, sorry!\");\n      } else if (this.mag < 0) {\n        return Decimal.fromNumber(f_lambertw(this.toNumber()));\n      } else if (this.layer === 0) {\n        return Decimal.fromNumber(f_lambertw(this.sign * this.mag));\n      } else if (this.layer === 1) {\n        return d_lambertw(this);\n      } else if (this.layer === 2) {\n        return d_lambertw(this);\n      }\n\n      if (this.layer >= 3) {\n        return FC_NN(this.sign, this.layer - 1, this.mag);\n      }\n\n      throw \"Unhandled behavior in lambertw()\";\n    } //The super square-root function - what number, tetrated to height 2, equals this?\n    //Other sroots are possible to calculate probably through guess and check methods, this one is easy though.\n    // https://en.wikipedia.org/wiki/Tetration#Super-root\n\n  }, {\n    key: \"ssqrt\",\n    value: function ssqrt() {\n      if (this.sign == 1 && this.layer >= 3) {\n        return FC_NN(this.sign, this.layer - 1, this.mag);\n      }\n\n      var lnx = this.ln();\n      return lnx.div(lnx.lambertw());\n    }\n    /*\r\n      Unit tests for tetrate/iteratedexp/iteratedlog/layeradd10/layeradd/slog:\r\n    (note: these won't be exactly precise with the new slog implementation, but that's okay)\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var expected = first+both+1;\r\n    var result = new Decimal(10).layeradd10(first).layeradd10(both).slog();\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    first += both;\r\n    var expected = first-both+1;\r\n    var result = new Decimal(10).layeradd10(first).layeradd10(-both).slog();\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var base = Math.random()*8+2;\r\n    var expected = first+both+1;\r\n    var result = new Decimal(base).layeradd(first, base).layeradd(both, base).slog(base);\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var base = Math.random()*8+2;\r\n    first += both;\r\n    var expected = first-both+1;\r\n    var result = new Decimal(base).layeradd(first, base).layeradd(-both, base).slog(base);\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var tetrateonly = Decimal.tetrate(10, first);\r\n    var tetrateandlog = Decimal.tetrate(10, first+both).iteratedlog(10, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var base = Math.random()*8+2;\r\n    var tetrateonly = Decimal.tetrate(base, first);\r\n    var tetrateandlog = Decimal.tetrate(base, first+both).iteratedlog(base, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var base = Math.random()*8+2;\r\n    var tetrateonly = Decimal.tetrate(base, first, base);\r\n    var tetrateandlog = Decimal.tetrate(base, first+both, base).iteratedlog(base, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var xex = new Decimal(-0.3678794411710499+Math.random()*100);\r\n    var x = Decimal.lambertw(xex);\r\n    if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))\r\n    {\r\n        console.log(xex);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var xex = new Decimal(-0.3678794411710499+Math.exp(Math.random()*100));\r\n    var x = Decimal.lambertw(xex);\r\n    if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))\r\n    {\r\n        console.log(xex);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);\r\n    var b = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);\r\n    if (Math.random() > 0.5) { a = a.recip(); }\r\n    if (Math.random() > 0.5) { b = b.recip(); }\r\n    var c = a.add(b).toNumber();\r\n    if (Number.isFinite(c) && !Decimal.eq_tolerance(c, a.toNumber()+b.toNumber()))\r\n    {\r\n        console.log(a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 100; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    if (Math.random() > 0.5) { a = a.recip(); }\r\n    if (Math.random() > 0.5) { b = b.recip(); }\r\n    var c = a.mul(b).toNumber();\r\n    if (Number.isFinite(c) && Number.isFinite(a.toNumber()) && Number.isFinite(b.toNumber()) && a.toNumber() != 0 && b.toNumber() != 0 && c != 0 && !Decimal.eq_tolerance(c, a.toNumber()*b.toNumber()))\r\n    {\r\n        console.log(\"Test 1: \" + a + \", \" + b);\r\n    }\r\n    else if (!Decimal.mul(a.recip(), b.recip()).eq_tolerance(Decimal.mul(a, b).recip()))\r\n    {\r\n        console.log(\"Test 3: \" + a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 10; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    if (Math.random() > 0.5 && a.sign !== 0) { a = a.recip(); }\r\n    if (Math.random() > 0.5 && b.sign !== 0) { b = b.recip(); }\r\n    var c = a.pow(b);\r\n    var d = a.root(b.recip());\r\n    var e = a.pow(b.recip());\r\n    var f = a.root(b);\r\n        if (!c.eq_tolerance(d) && a.sign !== 0 && b.sign !== 0)\r\n    {\r\n      console.log(\"Test 1: \" + a + \", \" + b);\r\n    }\r\n    if (!e.eq_tolerance(f) && a.sign !== 0 && b.sign !== 0)\r\n    {\r\n      console.log(\"Test 2: \" + a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 10; ++i)\r\n    {\r\n    var a = Math.round(Math.random()*18-9);\r\n    var b = Math.round(Math.random()*100-50);\r\n    var c = Math.round(Math.random()*18-9);\r\n    var d = Math.round(Math.random()*100-50);\r\n    console.log(\"Decimal.pow(Decimal.fromMantissaExponent(\" + a + \", \" + b + \"), Decimal.fromMantissaExponent(\" + c + \", \" + d + \")).toString()\");\r\n    }\r\n      */\n    //Pentation/pentate: The result of tetrating 'height' times in a row. An absurdly strong operator - Decimal.pentate(2, 4.28) and Decimal.pentate(10, 2.37) are already too huge for break_eternity.js!\n    // https://en.wikipedia.org/wiki/Pentation\n\n  }, {\n    key: \"pentate\",\n    value: function pentate() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n      payload = D(payload);\n      var oldheight = height;\n      height = Math.trunc(height);\n      var fracheight = oldheight - height; //I have no idea if this is a meaningful approximation for pentation to continuous heights, but it is monotonic and continuous.\n\n      if (fracheight !== 0) {\n        if (payload.eq(Decimal.dOne)) {\n          ++height;\n          payload = Decimal.fromNumber(fracheight);\n        } else {\n          if (this.eq(10)) {\n            payload = payload.layeradd10(fracheight);\n          } else {\n            payload = payload.layeradd(fracheight, this);\n          }\n        }\n      }\n\n      for (var i = 0; i < height; ++i) {\n        payload = this.tetrate(payload.toNumber()); //bail if we're NaN\n\n        if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\n          return payload.normalize();\n        } //give up after 10 iterations if nothing is happening\n\n\n        if (i > 10) {\n          return payload;\n        }\n      }\n\n      return payload;\n    } // trig functions!\n\n  }, {\n    key: \"sin\",\n    value: function sin() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.sin(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"cos\",\n    value: function cos() {\n      if (this.mag < 0) {\n        return Decimal.dOne;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.cos(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"tan\",\n    value: function tan() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.tan(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"asin\",\n    value: function asin() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.asin(this.sign * this.mag));\n      }\n\n      return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n    }\n  }, {\n    key: \"acos\",\n    value: function acos() {\n      if (this.mag < 0) {\n        return Decimal.fromNumber(Math.acos(this.toNumber()));\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.acos(this.sign * this.mag));\n      }\n\n      return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n    }\n  }, {\n    key: \"atan\",\n    value: function atan() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.atan(this.sign * this.mag));\n      }\n\n      return Decimal.fromNumber(Math.atan(this.sign * 1.8e308));\n    }\n  }, {\n    key: \"sinh\",\n    value: function sinh() {\n      return this.exp().sub(this.negate().exp()).div(2);\n    }\n  }, {\n    key: \"cosh\",\n    value: function cosh() {\n      return this.exp().add(this.negate().exp()).div(2);\n    }\n  }, {\n    key: \"tanh\",\n    value: function tanh() {\n      return this.sinh().div(this.cosh());\n    }\n  }, {\n    key: \"asinh\",\n    value: function asinh() {\n      return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n    }\n  }, {\n    key: \"acosh\",\n    value: function acosh() {\n      return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n    }\n  }, {\n    key: \"atanh\",\n    value: function atanh() {\n      if (this.abs().gte(1)) {\n        return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n      }\n\n      return Decimal.ln(this.add(1).div(Decimal.fromNumber(1).sub(this))).div(2);\n    }\n    /**\r\n     * Joke function from Realm Grinder\r\n     */\n\n  }, {\n    key: \"ascensionPenalty\",\n    value: function ascensionPenalty(ascensions) {\n      if (ascensions === 0) {\n        return this;\n      }\n\n      return this.root(Decimal.pow(10, ascensions));\n    }\n    /**\r\n     * Joke function from Cookie Clicker. It's 'egg'\r\n     */\n\n  }, {\n    key: \"egg\",\n    value: function egg() {\n      return this.add(9);\n    }\n  }, {\n    key: \"lessThanOrEqualTo\",\n    value: function lessThanOrEqualTo(other) {\n      return this.cmp(other) < 1;\n    }\n  }, {\n    key: \"lessThan\",\n    value: function lessThan(other) {\n      return this.cmp(other) < 0;\n    }\n  }, {\n    key: \"greaterThanOrEqualTo\",\n    value: function greaterThanOrEqualTo(other) {\n      return this.cmp(other) > -1;\n    }\n  }, {\n    key: \"greaterThan\",\n    value: function greaterThan(other) {\n      return this.cmp(other) > 0;\n    }\n  }], [{\n    key: \"fromComponents\",\n    value: function fromComponents(sign, layer, mag) {\n      return new Decimal().fromComponents(sign, layer, mag);\n    }\n  }, {\n    key: \"fromComponents_noNormalize\",\n    value: function fromComponents_noNormalize(sign, layer, mag) {\n      return new Decimal().fromComponents_noNormalize(sign, layer, mag);\n    }\n  }, {\n    key: \"fromMantissaExponent\",\n    value: function fromMantissaExponent(mantissa, exponent) {\n      return new Decimal().fromMantissaExponent(mantissa, exponent);\n    }\n  }, {\n    key: \"fromMantissaExponent_noNormalize\",\n    value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\n      return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n    }\n  }, {\n    key: \"fromDecimal\",\n    value: function fromDecimal(value) {\n      return new Decimal().fromDecimal(value);\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(value) {\n      return new Decimal().fromNumber(value);\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value) {\n      return new Decimal().fromString(value);\n    }\n  }, {\n    key: \"fromValue\",\n    value: function fromValue(value) {\n      return new Decimal().fromValue(value);\n    }\n    /**\r\n     * Converts a DecimalSource to a Decimal, without constructing a new Decimal\r\n     * if the provided value is already a Decimal.\r\n     *\r\n     * As the return value could be the provided value itself, this function\r\n     * returns a read-only Decimal to prevent accidental mutations of the value.\r\n     * Use `new Decimal(value)` to explicitly create a writeable copy if mutation\r\n     * is required.\r\n     */\n\n  }, {\n    key: \"fromValue_noAlloc\",\n    value: function fromValue_noAlloc(value) {\n      if (value instanceof Decimal) {\n        return value;\n      } else if (typeof value === \"string\") {\n        var cached = Decimal.fromStringCache.get(value);\n\n        if (cached !== undefined) {\n          return cached;\n        }\n\n        return Decimal.fromString(value);\n      } else if (typeof value === \"number\") {\n        return Decimal.fromNumber(value);\n      } else {\n        // This should never happen... but some users like Prestige Tree Rewritten\n        // pass undefined values in as DecimalSources, so we should handle this\n        // case to not break them.\n        return Decimal.dZero;\n      }\n    }\n  }, {\n    key: \"abs\",\n    value: function abs(value) {\n      return D(value).abs();\n    }\n  }, {\n    key: \"neg\",\n    value: function neg(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"negate\",\n    value: function negate(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"negated\",\n    value: function negated(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(value) {\n      return D(value).sign;\n    }\n  }, {\n    key: \"sgn\",\n    value: function sgn(value) {\n      return D(value).sign;\n    }\n  }, {\n    key: \"round\",\n    value: function round(value) {\n      return D(value).round();\n    }\n  }, {\n    key: \"floor\",\n    value: function floor(value) {\n      return D(value).floor();\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil(value) {\n      return D(value).ceil();\n    }\n  }, {\n    key: \"trunc\",\n    value: function trunc(value) {\n      return D(value).trunc();\n    }\n  }, {\n    key: \"add\",\n    value: function add(value, other) {\n      return D(value).add(other);\n    }\n  }, {\n    key: \"plus\",\n    value: function plus(value, other) {\n      return D(value).add(other);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"times\",\n    value: function times(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"div\",\n    value: function div(value, other) {\n      return D(value).div(other);\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(value, other) {\n      return D(value).div(other);\n    }\n  }, {\n    key: \"recip\",\n    value: function recip(value) {\n      return D(value).recip();\n    }\n  }, {\n    key: \"reciprocal\",\n    value: function reciprocal(value) {\n      return D(value).recip();\n    }\n  }, {\n    key: \"reciprocate\",\n    value: function reciprocate(value) {\n      return D(value).reciprocate();\n    }\n  }, {\n    key: \"cmp\",\n    value: function cmp(value, other) {\n      return D(value).cmp(other);\n    }\n  }, {\n    key: \"cmpabs\",\n    value: function cmpabs(value, other) {\n      return D(value).cmpabs(other);\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(value, other) {\n      return D(value).cmp(other);\n    }\n  }, {\n    key: \"isNaN\",\n    value: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function (value) {\n      value = D(value);\n      return isNaN(value.sign) || isNaN(value.layer) || isNaN(value.mag);\n    })\n  }, {\n    key: \"isFinite\",\n    value: function (_isFinite) {\n      function isFinite(_x2) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      value = D(value);\n      return isFinite(value.sign) && isFinite(value.layer) && isFinite(value.mag);\n    })\n  }, {\n    key: \"eq\",\n    value: function eq(value, other) {\n      return D(value).eq(other);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(value, other) {\n      return D(value).eq(other);\n    }\n  }, {\n    key: \"neq\",\n    value: function neq(value, other) {\n      return D(value).neq(other);\n    }\n  }, {\n    key: \"notEquals\",\n    value: function notEquals(value, other) {\n      return D(value).notEquals(other);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(value, other) {\n      return D(value).lt(other);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(value, other) {\n      return D(value).lte(other);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(value, other) {\n      return D(value).gt(other);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(value, other) {\n      return D(value).gte(other);\n    }\n  }, {\n    key: \"max\",\n    value: function max(value, other) {\n      return D(value).max(other);\n    }\n  }, {\n    key: \"min\",\n    value: function min(value, other) {\n      return D(value).min(other);\n    }\n  }, {\n    key: \"minabs\",\n    value: function minabs(value, other) {\n      return D(value).minabs(other);\n    }\n  }, {\n    key: \"maxabs\",\n    value: function maxabs(value, other) {\n      return D(value).maxabs(other);\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(value, min, max) {\n      return D(value).clamp(min, max);\n    }\n  }, {\n    key: \"clampMin\",\n    value: function clampMin(value, min) {\n      return D(value).clampMin(min);\n    }\n  }, {\n    key: \"clampMax\",\n    value: function clampMax(value, max) {\n      return D(value).clampMax(max);\n    }\n  }, {\n    key: \"cmp_tolerance\",\n    value: function cmp_tolerance(value, other, tolerance) {\n      return D(value).cmp_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"compare_tolerance\",\n    value: function compare_tolerance(value, other, tolerance) {\n      return D(value).cmp_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"eq_tolerance\",\n    value: function eq_tolerance(value, other, tolerance) {\n      return D(value).eq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"equals_tolerance\",\n    value: function equals_tolerance(value, other, tolerance) {\n      return D(value).eq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"neq_tolerance\",\n    value: function neq_tolerance(value, other, tolerance) {\n      return D(value).neq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"notEquals_tolerance\",\n    value: function notEquals_tolerance(value, other, tolerance) {\n      return D(value).notEquals_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"lt_tolerance\",\n    value: function lt_tolerance(value, other, tolerance) {\n      return D(value).lt_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"lte_tolerance\",\n    value: function lte_tolerance(value, other, tolerance) {\n      return D(value).lte_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"gt_tolerance\",\n    value: function gt_tolerance(value, other, tolerance) {\n      return D(value).gt_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"gte_tolerance\",\n    value: function gte_tolerance(value, other, tolerance) {\n      return D(value).gte_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"pLog10\",\n    value: function pLog10(value) {\n      return D(value).pLog10();\n    }\n  }, {\n    key: \"absLog10\",\n    value: function absLog10(value) {\n      return D(value).absLog10();\n    }\n  }, {\n    key: \"log10\",\n    value: function log10(value) {\n      return D(value).log10();\n    }\n  }, {\n    key: \"log\",\n    value: function log(value, base) {\n      return D(value).log(base);\n    }\n  }, {\n    key: \"log2\",\n    value: function log2(value) {\n      return D(value).log2();\n    }\n  }, {\n    key: \"ln\",\n    value: function ln(value) {\n      return D(value).ln();\n    }\n  }, {\n    key: \"logarithm\",\n    value: function logarithm(value, base) {\n      return D(value).logarithm(base);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(value, other) {\n      return D(value).pow(other);\n    }\n  }, {\n    key: \"pow10\",\n    value: function pow10(value) {\n      return D(value).pow10();\n    }\n  }, {\n    key: \"root\",\n    value: function root(value, other) {\n      return D(value).root(other);\n    }\n  }, {\n    key: \"factorial\",\n    value: function factorial(value, _other) {\n      return D(value).factorial();\n    }\n  }, {\n    key: \"gamma\",\n    value: function gamma(value, _other) {\n      return D(value).gamma();\n    }\n  }, {\n    key: \"lngamma\",\n    value: function lngamma(value, _other) {\n      return D(value).lngamma();\n    }\n  }, {\n    key: \"exp\",\n    value: function exp(value) {\n      return D(value).exp();\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr(value) {\n      return D(value).sqr();\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt(value) {\n      return D(value).sqrt();\n    }\n  }, {\n    key: \"cube\",\n    value: function cube(value) {\n      return D(value).cube();\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt(value) {\n      return D(value).cbrt();\n    }\n  }, {\n    key: \"tetrate\",\n    value: function tetrate(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).tetrate(height, payload);\n    }\n  }, {\n    key: \"iteratedexp\",\n    value: function iteratedexp(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).iteratedexp(height, payload);\n    }\n  }, {\n    key: \"iteratedlog\",\n    value: function iteratedlog(value) {\n      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      var times = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return D(value).iteratedlog(base, times);\n    }\n  }, {\n    key: \"layeradd10\",\n    value: function layeradd10(value, diff) {\n      return D(value).layeradd10(diff);\n    }\n  }, {\n    key: \"layeradd\",\n    value: function layeradd(value, diff) {\n      var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      return D(value).layeradd(diff, base);\n    }\n  }, {\n    key: \"slog\",\n    value: function slog(value) {\n      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      return D(value).slog(base);\n    }\n  }, {\n    key: \"lambertw\",\n    value: function lambertw(value) {\n      return D(value).lambertw();\n    }\n  }, {\n    key: \"ssqrt\",\n    value: function ssqrt(value) {\n      return D(value).ssqrt();\n    }\n  }, {\n    key: \"pentate\",\n    value: function pentate(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).pentate(height, payload);\n    }\n    /**\r\n     * If you're willing to spend 'resourcesAvailable' and want to buy something\r\n     * with exponentially increasing cost each purchase (start at priceStart,\r\n     * multiply by priceRatio, already own currentOwned), how much of it can you buy?\r\n     * Adapted from Trimps source code.\r\n     */\n\n  }, {\n    key: \"affordGeometricSeries\",\n    value: function affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n      return this.affordGeometricSeries_core(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n    }\n    /**\r\n     * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n     * the initial price is priceStart and it multiplies by priceRatio each purchase?\r\n     */\n\n  }, {\n    key: \"sumGeometricSeries\",\n    value: function sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n      return this.sumGeometricSeries_core(numItems, D(priceStart), D(priceRatio), currentOwned);\n    }\n    /**\r\n     * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\r\n     * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\r\n     * how much of it can you buy?\r\n     */\n\n  }, {\n    key: \"affordArithmeticSeries\",\n    value: function affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n      return this.affordArithmeticSeries_core(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n    }\n    /**\r\n     * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n     * the initial price is priceStart and it adds priceAdd each purchase?\r\n     * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\r\n     */\n\n  }, {\n    key: \"sumArithmeticSeries\",\n    value: function sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n      return this.sumArithmeticSeries_core(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n    }\n    /**\r\n     * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\r\n     * the lowest efficiency score is the better one to purchase.\r\n     * From Frozen Cookies:\r\n     * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\r\n     */\n\n  }, {\n    key: \"efficiencyOfPurchase\",\n    value: function efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n      return this.efficiencyOfPurchase_core(D(cost), D(currentRpS), D(deltaRpS));\n    }\n  }, {\n    key: \"randomDecimalForTesting\",\n    value: function randomDecimalForTesting(maxLayers) {\n      // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n      //5% of the time, return 0\n      if (Math.random() * 20 < 1) {\n        return FC_NN(0, 0, 0);\n      }\n\n      var randomsign = Math.random() > 0.5 ? 1 : -1; //5% of the time, return 1 or -1\n\n      if (Math.random() * 20 < 1) {\n        return FC_NN(randomsign, 0, 1);\n      } //pick a random layer\n\n\n      var layer = Math.floor(Math.random() * (maxLayers + 1));\n      var randomexp = layer === 0 ? Math.random() * 616 - 308 : Math.random() * 16; //10% of the time, make it a simple power of 10\n\n      if (Math.random() > 0.9) {\n        randomexp = Math.trunc(randomexp);\n      }\n\n      var randommag = Math.pow(10, randomexp); //10% of the time, trunc mag\n\n      if (Math.random() > 0.9) {\n        randommag = Math.trunc(randommag);\n      }\n\n      return FC(randomsign, layer, randommag);\n    }\n  }, {\n    key: \"affordGeometricSeries_core\",\n    value: function affordGeometricSeries_core(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n      var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n      return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10().div(priceRatio.log10()));\n    }\n  }, {\n    key: \"sumGeometricSeries_core\",\n    value: function sumGeometricSeries_core(numItems, priceStart, priceRatio, currentOwned) {\n      return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n    }\n  }, {\n    key: \"affordArithmeticSeries_core\",\n    value: function affordArithmeticSeries_core(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n      // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n      // where a is actualStart, d is priceAdd and S is resourcesAvailable\n      // then floor it and you're done!\n      var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n      var b = actualStart.sub(priceAdd.div(2));\n      var b2 = b.pow(2);\n      return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n    }\n  }, {\n    key: \"sumArithmeticSeries_core\",\n    value: function sumArithmeticSeries_core(numItems, priceStart, priceAdd, currentOwned) {\n      var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n      return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n    }\n  }, {\n    key: \"efficiencyOfPurchase_core\",\n    value: function efficiencyOfPurchase_core(cost, currentRpS, deltaRpS) {\n      return cost.div(currentRpS).add(cost.div(deltaRpS));\n    }\n  }, {\n    key: \"slog_critical\",\n    value: function slog_critical(base, height) {\n      //TODO: for bases above 10, revert to old linear approximation until I can think of something better\n      if (base > 10) {\n        return height - 1;\n      }\n\n      return Decimal.critical_section(base, height, critical_slog_values);\n    }\n  }, {\n    key: \"tetrate_critical\",\n    value: function tetrate_critical(base, height) {\n      return Decimal.critical_section(base, height, critical_tetr_values);\n    }\n  }, {\n    key: \"critical_section\",\n    value: function critical_section(base, height, grid) {\n      //this part is simple at least, since it's just 0.1 to 0.9\n      height *= 10;\n\n      if (height < 0) {\n        height = 0;\n      }\n\n      if (height > 10) {\n        height = 10;\n      } //have to do this complicated song and dance since one of the critical_headers is Math.E, and in the future I'd like 1.5 as well\n\n\n      if (base < 2) {\n        base = 2;\n      }\n\n      if (base > 10) {\n        base = 10;\n      }\n\n      var lower = 0;\n      var upper = 0; //basically, if we're between bases, we interpolate each bases' relevant values together\n      //then we interpolate based on what the fractional height is.\n      //accuracy could be improved by doing a non-linear interpolation (maybe), by adding more bases and heights (definitely) but this is AFAIK the best you can get without running some pari.gp or mathematica program to calculate exact values\n      //however, do note http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html can do it for arbitrary heights but not for arbitrary bases (2, e, 10 present)\n\n      for (var i = 0; i < critical_headers.length; ++i) {\n        if (critical_headers[i] == base) {\n          // exact match\n          lower = grid[i][Math.floor(height)];\n          upper = grid[i][Math.ceil(height)];\n          break;\n        } else if (critical_headers[i] < base && critical_headers[i + 1] > base) {\n          // interpolate between this and the next\n          var basefrac = (base - critical_headers[i]) / (critical_headers[i + 1] - critical_headers[i]);\n          lower = grid[i][Math.floor(height)] * (1 - basefrac) + grid[i + 1][Math.floor(height)] * basefrac;\n          upper = grid[i][Math.ceil(height)] * (1 - basefrac) + grid[i + 1][Math.ceil(height)] * basefrac;\n          break;\n        }\n      }\n\n      var frac = height - Math.floor(height); //improvement - you get more accuracy (especially around 0.9-1.0) by doing log, then frac, then powing the result\n      //(we could pre-log the lookup table, but then fractional bases would get Weird)\n\n      var result = Math.pow(base, Math.log(lower) / Math.log(base) * (1 - frac) + Math.log(upper) / Math.log(base) * frac);\n      return result;\n    }\n  }]);\n\n  return Decimal;\n}();\nDecimal.dZero = FC_NN(0, 0, 0);\nDecimal.dOne = FC_NN(1, 0, 1);\nDecimal.dNegOne = FC_NN(-1, 0, 1);\nDecimal.dTwo = FC_NN(1, 0, 2);\nDecimal.dTen = FC_NN(1, 0, 10);\nDecimal.dNaN = FC_NN(Number.NaN, Number.NaN, Number.NaN);\nDecimal.dInf = FC_NN(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\nDecimal.dNegInf = FC_NN(-1, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\nDecimal.dNumberMax = FC(1, 0, Number.MAX_VALUE);\nDecimal.dNumberMin = FC(1, 0, Number.MIN_VALUE);\nDecimal.fromStringCache = new LRUCache(DEFAULT_FROM_STRING_CACHE_SIZE); // return Decimal;\n// Optimise Decimal aliases.\n// We can't do this optimisation before Decimal is assigned.\n\nD = Decimal.fromValue_noAlloc;\nFC = Decimal.fromComponents;\nFC_NN = Decimal.fromComponents_noNormalize; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nDecimal.fromMantissaExponent; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nDecimal.fromMantissaExponent_noNormalize;\n\nexport { Decimal as default };\n","import { getElement, D } from \"./util\";\nimport Decimal from \"break_eternity.js\";\n\nconsole.log(\"loading player.ts\");\n\ndeclare global {\n    interface Window {\n        loadbackup: VoidFunction;\n    }\n}\n\nexport const player = {\n    upgrades: {\n        gen: { cost: Decimal.dZero, timesBought: Decimal.dZero },\n        biggerbatches: { cost: D(2000), timesBought: Decimal.dZero },\n        speed: { cost: D(50), timesBought: Decimal.dZero },\n        mbup: { cost: D(100), timesBought: Decimal.dZero },\n        mbmult: { cost: D(1000), timesBought: Decimal.dZero },\n        unlockgenboost: { cost: D(5000), timesBought: Decimal.dZero },\n        genboostuptime: { cost: D(100), timesBought: Decimal.dZero },\n        genboostupmult: { cost: D(10000), timesBought: Decimal.dZero },\n        nuclearbuy: { cost: D(1e8), timesBought: Decimal.dZero },\n        speedparticle: { cost: D(5e4), timesBought: Decimal.dZero },\n        machine: { cost: D(2e4), timesBought: Decimal.dZero },\n        nuclearalphabuy: { cost: D(1e6), timesBought: Decimal.dZero },\n        alphaacc: { cost: D(1e10), timesBought: Decimal.dZero },\n        threeboost: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        perbang: { cost: D(4), timesBought: Decimal.dZero },\n        bangspeed: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        unlockpca: { cost: D(20), timesBought: Decimal.dZero },\n        upgradepca: { cost: Decimal.dTwo, timesBought: Decimal.dZero },\n        boosterup: { cost: D(100), timesBought: Decimal.dZero },\n        boosteruppercent: { cost: D(100), timesBought: Decimal.dZero },\n        genboostdouble: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        alphamachinedouble: { cost: D(1000), timesBought: Decimal.dZero },\n        bangautobuyerunlock: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        upgradebangautobuyer: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        boostsacrifice: { cost: D(1e5), timesBought: Decimal.dZero },\n        betaacc: { cost: D(1e10), timesBought: Decimal.dZero },\n        unlockabgb: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        abgbefficiency: { cost: D(3), timesBought: Decimal.dZero },\n        permerge: { cost: D(4), timesBought: Decimal.dZero },\n        mergespeed: { cost: Decimal.dOne, timesBought: Decimal.dZero },\n        GnBBAunlock: { cost: D(0.5), timesBought: Decimal.dZero },\n        GBUAunlock: { cost: D(0.5), timesBought: Decimal.dZero },\n        MBUAunlock: { cost: D(0.5), timesBought: Decimal.dZero },\n        NPAunlock: { cost: D(0.5), timesBought: Decimal.dZero },\n        AAccAunlock: { cost: D(0.5), timesBought: Decimal.dZero },\n        SAunlock: { cost: D(0.5), timesBought: Decimal.dZero },\n        unlocknpboost: { cost: Decimal.dTwo, timesBought: Decimal.dZero },\n        upgradenpboost: { cost: Decimal.dTwo, timesBought: Decimal.dZero },\n        reactorupmult: { cost: D(1500), timesBought: Decimal.dZero },\n        reactoruptime: { cost: D(1250), timesBought: Decimal.dZero },\n        unlocknapboost: { cost: D(15), timesBought: Decimal.dZero },\n        upgradenapboost: { cost: D(15), timesBought: Decimal.dZero },\n        reactorUnlockNAP: { cost: D(3e4), timesBought: Decimal.dZero },\n        reactorUnlockBP: { cost: D(8e6), timesBought: Decimal.dZero },\n        reactorUnlockMB: { cost: D(8000), timesBought: Decimal.dZero },\n        reactorUnlockGB: { cost: D(2.5e5), timesBought: Decimal.dZero },\n        reactorupMB: { cost: D(3000), timesBought: Decimal.dZero },\n    },\n    num: Decimal.dZero,\n    alphaNum: Decimal.dZero,\n    betaNum: Decimal.dZero,\n    gammaNum: Decimal.dZero,\n    deltaNum: Decimal.dZero,\n    omegaNum: Decimal.dZero,\n    genBoostTimeLeft: Decimal.dZero,\n    genBoostTimeLeftCon: Decimal.dTen,\n    genBoostMult: Decimal.dOne,\n    pChunks: Decimal.dZero,\n    bangTime: 300,\n    bangTimeLeft: 1e300,\n    pcaToggle: true,\n    pcaTime: 160,\n    chunkAutobuyerTimeLeft: 0,\n    boosterParticles: Decimal.dZero,\n    untilBoost: 1,\n    omegaBase: Decimal.dZero,\n    omegaBaseCost: D(1e10),\n    omegaAlpha: Decimal.dZero,\n    omegaAlphaCost: D(1e12),\n    bangAutobuyerToggle: true,\n    bangAutobuyerTime: 160,\n    bangAutobuyerTimeLeft: 0,\n    clickerParticles: Decimal.dZero,\n    machineWear: 10,\n    aGroups: Decimal.dZero,\n    mergeTime: 300,\n    mergeTimeLeft: 1e300,\n    fuel: Decimal.dZero,\n    superfuel: Decimal.dZero,\n    hyperfuel: Decimal.dZero,\n    instantAutobuyers: {\n        genAutobuyerToggle: false,\n        bbAutobuyerToggle: false,\n        genBoostTimeAutobuyerToggle: false,\n        genBoostMultAutobuyerToggle: false,\n        manBoost1perClickAutobuyerToggle: false,\n        manBoost1xperClickAutobuyerToggle: false,\n        nuclearParticlesAutobuyerToggle: false,\n        nuclearAlphaParticlesAutobuyerToggle: false,\n        AlphaAccAutobuyerToggle: false,\n        SpeedAutobuyerToggle: false,\n    }\n};\n\nexport const playerSettings = {\n    version: \"b2.1.0.0\",\n    eSetting: 4,\n    autoSaveDelay: 50,\n    autoSaveMode: 4,\n    autoSaveSet: 50,\n    themeNumber: 0,\n    useExperimental: false,\n    devToggled: false,\n    cheatMode: 0,\n}\n\n\nfunction updateGame(): void { //TODO: NEVER forget to change this when updating the game\n    if (playerSettings.version !== 'b2.2.0.0') {\n        //alert('Critical issue likely requires save wipe to fix. For now game is broken, emergency update soon')\n        //localStorage.removeItem(location.pathname)\n    }\n    playerSettings.version = 'b2.2.0.0';\n}\n\nexport function loadSettings(): void {\n    const settings = localStorage.getItem(location.pathname + \"settings\");\n    if (settings !== null) {\n        const decodedSettings = settings.startsWith(\"{\") ? settings : atob(settings);\n        deepMerge(playerSettings, JSON.parse(decodedSettings));\n    }\n    updateGame();\n\n    if (playerSettings.useExperimental) {\n        getElement('tabopengamma').style.display = 'inline';\n        getElement('tabopendelta').style.display = 'inline';\n        getElement('tabopenomegaomega').style.display = 'inline';\n        getElement('tabopenstats').style.display = 'inline';\n        getElement('tabopenachievements').style.display = 'inline';\n    }\n    else {\n        getElement('tabopengamma').style.display = 'none';\n        getElement('tabopendelta').style.display = 'none';\n        getElement('tabopenomegaomega').style.display = 'none';\n        getElement('tabopenstats').style.display = 'inline';\n        getElement('tabopenachievements').style.display = 'none';\n    }\n    getElement('experimentoggle').textContent = playerSettings.useExperimental.toString()\n}\n\nDecimal.prototype.toJSON = function (): string {\n    return 'D#' + this.toString();\n};\n\nfunction saveRevive(_key: string, value: unknown): unknown {\n    if (typeof value === 'string' && value.startsWith('D#')) {\n        return new Decimal(value.slice(2))\n    }\n    return value;\n}\n\nexport function getSaveString(): string {\n    return JSON.stringify(player);\n}\n\nfunction deepMerge<T extends object>(source: T, data: T): void {\n    for (const key in data) {\n        const value = data[key];\n        if (\n            typeof value === \"object\" && \n            value !== null && \n            !(value instanceof Decimal)\n        ) {\n            const newSource = source[key];\n            if (!(key in source)) {\n                // @ts-expect-error uhh how do I convince TS this is fine?\n                source[key] = Array.isArray(value) ? [] : {};\n            }\n            if (typeof newSource === \"object\" && newSource !== null) {\n                deepMerge(newSource, value);\n            }\n        }\n        else source[key] = value;\n    }\n}\n\nexport function load(): void {\n    const save = localStorage.getItem(location.pathname);\n    if (save === null) return;\n    // leave it alone when it was JSON and not base64\n    const decodedSave = save.startsWith(\"{\") ? save : atob(save);\n    deepMerge(player, JSON.parse(decodedSave, saveRevive));\n}\n\nwindow.loadbackup = function (): void {\n    const backup = localStorage.getItem(location.pathname + \"backupsave\");\n    if (backup === null) return;\n    localStorage.setItem(location.pathname, backup);\n    location.reload();\n};\n\n\nexport type InstantAutobuyerName = keyof typeof player.instantAutobuyers;\n\nexport function isAutobuyerName(x: unknown): x is InstantAutobuyerName {\n    return typeof x === \"string\" && x in player.instantAutobuyers;\n}\n\nexport type UpgradeName = keyof typeof player.upgrades;\nexport const UpgradeNames = Object.keys(player.upgrades) as UpgradeName[];\n\nexport function isUpgradeName(x: unknown): x is UpgradeName {\n    return typeof x === \"string\" && x in player.upgrades;\n}\n\nexport function getUpgradeCost(upgradeName: UpgradeName): Decimal {\n    return player.upgrades[upgradeName].cost;\n}\n\nexport function setUpgradeCost(upgradeName: UpgradeName, costIn: Decimal): void {\n    player.upgrades[upgradeName].cost = costIn;\n}\n\nexport function getUpgradeTimesBought(upgradeName: UpgradeName): Decimal {\n    return player.upgrades[upgradeName].timesBought\n}","import {\n  getUpgradeTimesBought,\n  isUpgradeName,\n  player,\n  playerSettings\n} from \"./player\";\nimport Decimal, { type DecimalSource} from \"break_eternity.js\";\n\ndeclare global {\n  interface Window {\n    changeCheatMode: VoidFunction;\n    cheat?: VoidFunction;\n    clearls: VoidFunction;\n  }\n}\n\nconst MAX_ES_IN_A_ROW = 5;\n\nfunction decimalPlaces(\n  value: number,\n  places: number,\n  trunc = (x: number) => x\n): number {\n  const len = places + 1;\n  const numDigits = Math.ceil(Math.log10(Math.abs(value)));\n  const rounded =\n    Math.round(value * Math.pow(10, len - numDigits)) *\n    Math.pow(10, numDigits - len);\n  const ret = Number(rounded.toFixed(Math.max(len - numDigits, 0)));\n  return trunc(ret);\n}\n\nexport function formatD(d: Decimal, places = 3, ePlaces = 99): string {\n  if (d.layer === 0) {\n    if ((d.mag < 1e4 && d.mag > 1e-7) || d.mag === 0) {\n      return (d.sign * d.mag).toFixed(places);\n    }\n    return `${decimalPlaces(d.m, places)}e${decimalPlaces(\n      d.e,\n      ePlaces,\n      Math.round\n    )}`;\n  } else if (d.layer === 1) {\n    return `${decimalPlaces(d.m, places)}e${decimalPlaces(\n      d.e,\n      ePlaces,\n      Math.round\n    )}`;\n  } else {\n    //layer 2+\n    if (d.layer <= MAX_ES_IN_A_ROW) {\n      return (\n        `${(d.sign === -1 ? \"-\" : \"\")}${\"e\".repeat(d.layer)}\n        ${decimalPlaces(d.mag, ePlaces, Math.round)}`\n      );\n    } else {\n      return `${d.sign === -1 ? \"-\" : \"\"}(e^${d.layer})${decimalPlaces(\n        d.mag,\n        ePlaces,\n        Math.round\n      )}`;\n    }\n  }\n}\n\nexport function format(n: number): string {\n  return Math.log10(n) >= playerSettings.eSetting\n    ? n.toExponential(2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n    : n.toFixed(0);\n}\n\nexport function formatb(n: Decimal): string {\n  return n.absLog10().toNumber() >= /*playerSettings.eSetting TODO: fix all this*/ 4\n    ? formatD(n, 2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n    : n.toFixed(0);\n}\n\nexport function formatSpecific(n: number): string {\n  return Math.log10(n) >= 4 //playersettings.esettin!!\n    ? n.toExponential(2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n    : n.toFixed(3).replace(\".000\", \"\");\n}\n\nexport function formatbSpecific(n: Decimal): string {\n  return n.absLog10().toNumber() >= 4 //playersettings.esettin!!\n    ? formatD(n, 2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n    : n.toFixed(3).replace(\".000\", \"\");\n}\n\nfunction assertElementType<T extends keyof HTMLElementTagNameMap>(\n  element: HTMLElement,\n  type: T\n): asserts element is HTMLElementTagNameMap[T] {\n  if (element.tagName !== type.toUpperCase()) {\n    throw new TypeError(`element isn't a <${type}> HTML element`);\n  }\n}\n\n/**\n * @param id Id of the element to get.\n * @returns The HTML element with the given id.\n */\nexport function getElement(id: string): HTMLElement\n/**\n * @param id Id of the element to get.\n * @param type The expected tag name of the element.\n * @returns The HTML element with the given id.\n */\nexport function getElement<T extends keyof HTMLElementTagNameMap>(\n  id: string,\n  type: T\n): HTMLElementTagNameMap[T]\nexport function getElement<T extends keyof HTMLElementTagNameMap>(\n  id: string,\n  type?: T\n) {\n  const element = document.getElementById(id);\n  if (element === null) {\n    throw new Error(`Element with id ${id} dosen't exist`);\n  }\n\n  if (type !== undefined) {\n    assertElementType(element, type);\n  }\n  return element\n}\n\nexport function D(n: DecimalSource): Decimal {\n  return Decimal.fromValue_noAlloc(n);\n}\n\ntype D2Arg<T> = T | Decimal | Operator | D2Arg<T>[];\n\nconst operatorMap = {\n  \"+\": \"plus\",\n  \"*\": \"times\",\n  \"/\": \"div\",\n  \"^\": \"pow\",\n} as const;\n\ntype Operator = keyof typeof operatorMap;\n\nfunction isOp(x: unknown): x is Operator {\n  return typeof x === \"string\" && x in operatorMap;\n}\n\nexport function onD<T = string>(\n  is: (x: unknown) => x is T,\n  lookup: (key: T) => Decimal\n) {\n  const fn = function (\n    start: T | Decimal | D2Arg<T>[],\n    ...terms: D2Arg<T>[]\n  ): Decimal {\n    let result: Decimal | ((x: D2Arg<T>) => Decimal);\n    if (Array.isArray(start)) {\n      const [first, rest] = splitArgs(start);\n      result = fn(first, ...rest);\n    } else {\n      result = start instanceof Decimal ? start : lookup(start);\n    }\n\n    terms.forEach((token) => {\n      if (result instanceof Function) {\n        if (isOp(token)) {\n          throw new Error(\"to operations in a row\");\n        }\n        if (Array.isArray(token)) {\n          const [first, rest] = splitArgs(token);\n          result = result(fn(first, ...rest));\n        } else {\n          const operand = is(token) ? lookup(token) : token;\n          result = result(operand);\n        }\n      } else {\n        if (token instanceof Decimal) {\n          result = result.times(token);\n        } else if (is(token)) {\n          result = result.times(lookup(token));\n        } else if (Array.isArray(token)) {\n          const [first, args] = splitArgs(token);\n          result = result.times(fn(first, ...args));\n        } else {\n          const left = result;\n          const method = (d: Decimal) => Decimal[operatorMap[token]](left, d); //ERROR HERE AND IN LINE BELOW\n          result = (x) => {\n            if (x instanceof Decimal) {\n              return method(x);\n            }\n            if (Decimal[x as never]) {\n              throw new Error(\"cannot have two operations in a row\");\n            }\n\n            return method(lookup(x as T));\n          };\n        }\n      }\n    });\n    return result;\n  };\n\n  function splitArgs(args: D2Arg<T>[]): [T | Decimal, D2Arg<T>[]] {\n    const arr = [...args];\n    const head = arr.shift();\n    if (head === undefined) {\n      throw new Error(\"arr is empty\");\n    }\n    if (isOp(head)) {\n      throw new Error(\"first token cannot be an operator\");\n    }\n    if (Array.isArray(head)) {\n      const [first, rest] = splitArgs(head);\n      return [fn(first, ...rest), arr];\n    }\n    return [head, arr];\n  }\n  return fn;\n}\n\nexport const onBought = onD(isUpgradeName, (key) =>\n  getUpgradeTimesBought(key)\n);\n\nexport const onBoughtInc = onD(isUpgradeName, (key) =>\n  getUpgradeTimesBought(key).plus(Decimal.dOne)\n);\n\nwindow.changeCheatMode = function (): void {\n  playerSettings.cheatMode = (playerSettings.cheatMode + 1) % 6;\n  getElement('cheatmodediv').textContent = playerSettings.cheatMode.toString();\n}\n\n// dev only\nif (import.meta.env.DEV) window.cheat = function (): void {\n  switch (playerSettings.cheatMode) {\n    case 0:\n      player.num = player.num.times(Decimal.dTwo)\n      break;\n    case 1:\n      player.alphaNum = player.alphaNum.times(Decimal.dTwo)\n      break;\n    case 2:\n      player.num = player.num.times(Decimal.dTwo)\n      player.alphaNum = player.alphaNum.times(Decimal.dTwo)\n      break;\n    case 3:\n      player.alphaNum = player.alphaNum.plus(Decimal.dOne).times(Decimal.dTwo)\n      break;\n    case 4:\n      player.num = player.num.times(Decimal.dTwo)\n      player.alphaNum = player.alphaNum.plus(Decimal.dOne).times(Decimal.dTwo)\n      break;\n    case 5:\n      player.betaNum = player.betaNum.plus(Decimal.dOne).times(Decimal.dTwo)\n      break;\n  }\n};\nelse getElement('cheat').style.display = 'none';\n\nwindow.clearls = function (): void {\n  localStorage.clear();\n  location.reload();\n}\n","import { getElement } from \"./util\";\n\ndeclare global {\n    interface Window {\n        musicSwitch: () => Promise<void>\n    }\n}\n\nconst music = getElement(\"audio\", \"audio\");\nconst musicState = getElement(\"musicState\");\nexport let musicPlaying = false;\nmusicPlaying ? await music.play() : music.pause();\nmusicState.textContent = musicPlaying ? \"On\" : \"Off\";\n\nwindow.musicSwitch = async function (): Promise<void> {\n    musicPlaying = !musicPlaying;\n    musicPlaying ? await music.play() : music.pause();\n    musicState.textContent = musicPlaying ? \"On\" : \"Off\";\n}//imma try implementing my idea then you can look at the errors ok\n\n\n//woukd want musicPlayig to save in playerSettings and it to look smth like this\n/*\nconst music = getElement(\"audio\", \"audio\");\nconst musicState = getElement(\"musicState\");\nexport let musicPlaying = true;\n//musicPlaying ? await music.play() : music.pause();\nmusicState.textContent = musicPlaying ? \"On\" : \"Off\";\n\n\n\nwindow.musicSwitch = async function (): Promise<void> {\n    musicPlaying = !musicPlaying;\n    if(musicPlaying) {\n        const tryToPlay = setInterval(() => {\n            const audio = getElement(\"audio\", \"audio\");\n        \n            audio.play()\n                .then(() => {\n                    clearInterval(tryToPlay);\n                })\n                .catch(error => {\n                    console.info('User has not interacted with document yet.');\n                });\n        }, 5000);\n    }\n    musicState.textContent = musicPlaying ? \"On\" : \"Off\";\n}*/\n//yes copypasted from stackoverflow but this is general idea\n//to make it basiucally autoplay then be stopped if its toggled off\n\n/*\nconst tryToPlay = setInterval(() => {\n    const audio = getElement(\"audio\", \"audio\");\n\n    audio.play()\n        .then(() => {\n            clearInterval(tryToPlay);\n        })\n        .catch(error => {\n            console.info('User has not interacted with document yet.');\n        });\n}, 5000);*/\n//this is code from stackoverflow\n//can probably be improved to fit better with my existing code\n//it works but trying t ofit into the musicswitch function results in weird errors","import {\n  player,\n  getUpgradeTimesBought,\n  getUpgradeCost,\n  setUpgradeCost,\n  type UpgradeName\n} from \"./player\";\nimport { formatb, getElement, D, onBought, formatD } from \"./util\"\nimport Decimal from \"break_eternity.js\";\n\ndeclare global {\n  interface Window {\n    buyUpgrade: (upgrade: UpgradeName) => void;\n    buyFiftySpeed: VoidFunction;\n  }\n}\n\nexport const currencyName = {\n  num: \"\",\n  alphaNum: \" Alpha\",\n  boosterParticles: \" Booster Particles\",\n  omegaBase: \" \",\n  betaNum: \" Beta\",\n  omegaAlpha: \" \"\n};\n\nexport type CurrencyName = keyof typeof currencyName;\n\nexport function UpdateCostVal(\n  elementID: string,\n  variable: Decimal,\n  currency: CurrencyName = \"num\",\n  precision = 2\n) {\n  if (precision === 2) {\n    getElement(elementID).textContent =\n      \"Cost: \" + formatb(variable) + currencyName[currency];\n  }\n  else {\n    getElement(elementID).textContent =\n      \"Cost: \" + formatD(variable, precision) + currencyName[currency];\n  }\n}\n\ninterface Upgrade {\n  currency: CurrencyName;\n  costDiv: string;\n  scaleFunction: (upgradeName: UpgradeName) => void;\n  extra?: VoidFunction;\n  costRounding?: number;\n}\n\n\nexport const upgrades = {\n  gen: {\n    scaleFunction: scaleGen,\n    costDiv: \"divgencost\",\n    currency: \"num\",\n  },\n  biggerbatches: {\n    scaleFunction: scaleMultiplier(Decimal.dTwo),\n    costDiv: \"divbbcost\",\n    currency: \"num\"\n  },\n  speed: {\n    scaleFunction: scaleSpeed,\n    costDiv: \"divspeedcost\",\n    currency: \"num\"\n  },\n  mbup: {\n    scaleFunction: scaleMultiplier(D(1.5)),\n    costDiv: \"divmbupcost\",\n    currency: \"num\"\n  },\n  mbmult: {\n    scaleFunction: scaleMultiplier(Decimal.dTwo),\n    costDiv: \"divmbmultcost\",\n    currency: \"num\"\n  },\n  unlockgenboost: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divgenunlockcost\",\n    currency: \"num\"\n  },\n  genboostuptime: {\n    scaleFunction: scaleMultiplier(D(5)),\n    costDiv: \"divgbuptcost\",\n    currency: \"num\",\n    extra: GBTExtra\n  },\n  genboostupmult: {\n    scaleFunction: scaleMultiplier(D(5)),\n    costDiv: \"divgbupmcost\",\n    currency: \"num\",\n    extra: GBMExtra\n  },\n  nuclearbuy: {\n    scaleFunction: scaleMultiplier(D(7)),\n    costDiv: \"divnuclearcost\",\n    currency: \"num\",\n    extra: NBExtra\n  },\n  speedparticle: {\n    scaleFunction: scaleMultiplier(D(5)),\n    costDiv: \"divspeedparticlecost\",\n    currency: \"num\"\n  },\n  machine: {\n    scaleFunction: scaleMultiplier(D(4)),\n    costDiv: \"divmachinecost\",\n    currency: \"num\",\n    extra: MachineExtra\n  },\n  alphaacc: {\n    scaleFunction: scaleMultiplier(D(1000)),\n    costDiv: \"divalphaacceleratorcost\",\n    currency: \"num\"\n  },\n  threeboost: {\n    scaleFunction: scaleMultiplier(D(4)),\n    costDiv: \"divthreeboostcost\",\n    currency: \"alphaNum\"\n  },\n  perbang: {\n    scaleFunction: scaleMultiplier(D(4)),\n    costDiv: \"divperbangcost\",\n    currency: \"alphaNum\"\n  },\n  bangspeed: {\n    scaleFunction: scaleBangSpeed,\n    costDiv: \"divbangspeedcost\",\n    currency: \"alphaNum\"\n  },\n  unlockpca: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divunlockpca\",\n    currency: \"alphaNum\"\n  },\n  upgradepca: {\n    scaleFunction: scaleMultiplier(D(3)),\n    costDiv: \"divupgradepcacost\",\n    currency: \"alphaNum\",\n    extra: PCAExtra\n  },\n  boosterup: {\n    scaleFunction: scaleMultiplier(Decimal.dTen),\n    costDiv: \"divboosterupcost\",\n    currency: \"alphaNum\"\n  },\n  boosteruppercent: {\n    scaleFunction: scaleMultiplier(Decimal.dTen),\n    costDiv: \"divboosteruppercentcost\",\n    currency: \"alphaNum\"\n  },\n  nuclearalphabuy: {\n    scaleFunction: scaleMultiplier(D(7)),\n    costDiv: \"divnuclearalphacost\",\n    currency: \"alphaNum\",\n    extra: NABExtra\n  },\n  genboostdouble: {\n    scaleFunction: scaleMultiplier(Decimal.dTwo),\n    costDiv: \"gboostdouble\",\n    currency: \"alphaNum\",\n    extra: GBDExtra\n  },\n  alphamachinedouble: {\n    scaleFunction: scaleMultiplier(D(3)),\n    costDiv: \"alphamachinedouble\",\n    currency: \"alphaNum\"\n  },\n  bangautobuyerunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divbau\",\n    currency: \"omegaBase\"\n  },\n  upgradebangautobuyer: {\n    scaleFunction: scaleBA,\n    costDiv: \"divupgradeba\",\n    currency: \"omegaBase\",\n    extra: BAExtra,\n    costRounding: 1\n  },\n  boostsacrifice: {\n    scaleFunction: scaleMultiplier(Decimal.dTen),\n    costDiv: \"divboostsacrificecost\",\n    currency: \"boosterParticles\",\n    extra: BSExtra\n  },\n  betaacc: {\n    scaleFunction: scaleMultiplier(D(1000)),\n    costDiv: \"divbetaacceleratorcost\",\n    currency: \"alphaNum\"\n  },\n  unlockabgb: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divabgbcost\",\n    currency: \"betaNum\"\n  },\n  abgbefficiency: {\n    scaleFunction: scaleMultiplier(Decimal.dTwo),\n    costDiv: \"divabgbefficiencycost\",\n    currency: \"betaNum\"\n  },\n  permerge: {\n    scaleFunction: scaleMultiplier(D(4)),\n    costDiv: \"divpermergecost\",\n    currency: \"betaNum\"\n  },\n  mergespeed: {\n    scaleFunction: scaleBangSpeed,\n    costDiv: \"divmergespeedcost\",\n    currency: \"betaNum\"\n  },\n  GnBBAunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"usewhencostdisplaynotneeded\",\n    currency: \"omegaAlpha\"\n  },\n  GBUAunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"usewhencostdisplaynotneeded\",\n    currency: \"omegaAlpha\"\n  },\n  MBUAunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"usewhencostdisplaynotneeded\",\n    currency: \"omegaAlpha\"\n  },\n  NPAunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"usewhencostdisplaynotneeded\",\n    currency: \"omegaAlpha\"\n  },\n  AAccAunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"usewhencostdisplaynotneeded\",\n    currency: \"omegaAlpha\"\n  },\n  SAunlock: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"usewhencostdisplaynotneeded\",\n    currency: \"omegaAlpha\"\n  },\n  unlocknpboost: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divnpboostcost\",\n    currency: \"betaNum\",\n    extra: NBExtra\n  },\n  upgradenpboost: {\n    scaleFunction: scaleMultiplier(Decimal.dTwo),\n    costDiv: \"divnpboostupcost\",\n    currency: \"betaNum\",\n    extra: NBExtra\n  },\n  reactorupmult: {\n    scaleFunction: scaleReactorUpMult,\n    costDiv: \"divreactorupmultcost\",\n    currency: \"betaNum\",\n  },\n  reactoruptime: {\n    scaleFunction: scaleReactorUpTime,\n    costDiv: \"divreactoruptimecost\",\n    currency: \"betaNum\",\n  },\n  unlocknapboost: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divnapboostcost\",\n    currency: \"betaNum\",\n    extra: NABExtra\n  },\n  upgradenapboost: {\n    scaleFunction: scaleMultiplier(D(4)),\n    costDiv: \"divnapboostupcost\",\n    currency: \"betaNum\",\n    extra: NABExtra\n  },\n  reactorUnlockNAP: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divreactorunlockNAPcost\",\n    currency: \"betaNum\"\n  },\n  reactorUnlockBP: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divreactorunlockBPcost\",\n    currency: \"betaNum\"\n  },\n  reactorUnlockMB: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divreactorunlockMBcost\",\n    currency: \"betaNum\"\n  },\n  reactorUnlockGB: {\n    scaleFunction: scaleMultiplier(Decimal.dInf),\n    costDiv: \"divreactorunlockGBcost\",\n    currency: \"betaNum\",\n  },\n  reactorupMB: {\n    scaleFunction: scaleMultiplier(D(1.75)),\n    costDiv: \"divreactorupMBcost\",\n    currency: \"betaNum\"\n  },\n} as const satisfies Record<string, Upgrade>;\n\nexport function scaleMultiplier(multiplier: Decimal): (upgradeName: UpgradeName) => void {\n  return function (upgradeName: UpgradeName) {\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).times(multiplier));\n  };\n}\n\nexport function scaleBangSpeed(upgradeName: UpgradeName): void {\n  if (getUpgradeTimesBought(upgradeName).lte(Decimal.dTwo)) {\n    scaleMultiplier(Decimal.dTwo)(upgradeName);\n  } else {\n    scaleMultiplier(D(5))(upgradeName);\n  }\n}\n\nexport function scaleSpeed(upgradeName: UpgradeName): void {\n  const x = getUpgradeTimesBought(upgradeName)\n\n  if (x.lt(Decimal.dTen)) {\n    setUpgradeCost(upgradeName, Decimal.dTen.times(x).plus(100))\n  }\n  else if (x.gte(Decimal.dTen) && x.lte(1000)) {\n    setUpgradeCost(upgradeName, x.times(40).minus(200));\n  }\n  else {\n    scaleMultiplier(D(1.1))(upgradeName)\n  }\n}\n\nexport function scaleGen(upgradeName: UpgradeName): void {\n  if (getUpgradeCost(upgradeName).eq(Decimal.dZero)) {\n    setUpgradeCost(upgradeName, D(1000));\n  } else {\n    scaleMultiplier(D(4))(upgradeName);\n  }\n}\n\nexport function scaleBA(upgradeName: UpgradeName): void {\n  setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.5));\n}\n\nexport function scaleReactorUpMult(upgradeName: UpgradeName): void {\n  if (getUpgradeTimesBought(upgradeName).lte(4)) {\n    scaleMultiplier(D(4))(upgradeName);\n  } else if (getUpgradeTimesBought(upgradeName).lte(8)) {\n    scaleMultiplier(D(8))(upgradeName);\n  }\n  else {\n    scaleMultiplier(D(64))(upgradeName);\n  }\n}\n\nexport function scaleReactorUpTime(upgradeName: UpgradeName): void {\n  if (getUpgradeTimesBought(upgradeName).lte(4)) {\n    scaleMultiplier(D(2.75))(upgradeName);\n  } else if (getUpgradeTimesBought(upgradeName).lte(8)) {\n    scaleMultiplier(D(5.5))(upgradeName);\n  }\n  else {\n    scaleMultiplier(D(44))(upgradeName);\n  }\n}\n\nexport function GBTExtra(): void {\n  player.genBoostTimeLeftCon = player.genBoostTimeLeftCon.plus(\n    Decimal.dTwo.pow(getUpgradeTimesBought(\"genboostdouble\")).times(20)\n  );\n  player.genBoostTimeLeft = Decimal.dZero;\n  player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n}\n\nexport function GBMExtra(): void {\n  player.genBoostTimeLeft = Decimal.dZero;\n  player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n}\n\nexport function GBDExtra(): void {\n  player.genBoostTimeLeftCon = player.genBoostTimeLeftCon.times(Decimal.dTwo);\n  player.genBoostTimeLeft = Decimal.dZero;\n  player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n}\n\nexport function MachineExtra(): void {\n  player.machineWear = 10\n}\n\nexport function NBExtra(): void {\n  let nuclearParticles = getUpgradeTimesBought('nuclearbuy')\n\n  if (getUpgradeTimesBought('unlocknpboost').eq(Decimal.dOne)) {\n    nuclearParticles = onBought(\n      ['nuclearbuy', '*', [Decimal.dOne, '+', ['upgradenpboost', '+', Decimal.dOne, '/', Decimal.dTen]]]\n    )\n    getElement('divnp').textContent = \"Nuclear Particles: \" + formatD(nuclearParticles, 1);\n  }\n\n  else {\n    getElement('divnp').textContent = \"Nuclear Particles: \" + formatb(getUpgradeTimesBought('nuclearbuy'));\n  }\n}\n\nexport function NABExtra(): void {\n  let nuclearAlphaParticles = getUpgradeTimesBought('nuclearalphabuy')\n\n  if (getUpgradeTimesBought('unlocknapboost').eq(Decimal.dOne)) {\n    nuclearAlphaParticles = onBought(\n      ['nuclearalphabuy', '*', [Decimal.dOne, '+', ['upgradenapboost', '+', Decimal.dOne, '/', Decimal.dTen]]]\n    )\n    getElement('divnap').textContent = \"Nuclear Alpha Particles: \" + formatD(nuclearAlphaParticles, 1);\n  }\n\n  else {\n    getElement('divnap').textContent = \"Nuclear Alpha Particles: \" + formatb(getUpgradeTimesBought('nuclearalphabuy'));\n  }\n}\n\nexport function PCAExtra(): void {\n  if (getUpgradeTimesBought(\"upgradepca\").lte(4)) {\n    player.pcaTime = Math.ceil(player.pcaTime / 2);\n  } else {\n    player.pcaTime = (Decimal.dTen.div(getUpgradeTimesBought(\"upgradepca\").minus(3))).ceil().toNumber()\n  }\n}\n\nexport function BAExtra(): void {\n  if (getUpgradeTimesBought(\"upgradebangautobuyer\").lte(4)) {\n    player.bangAutobuyerTime = Math.ceil(player.bangAutobuyerTime / 2);\n  } else {\n    player.bangAutobuyerTime = (Decimal.dTen.div(getUpgradeTimesBought(\"upgradebangautobuyer\").minus(3))).ceil().toNumber();\n  }\n}\n\nexport function BSExtra(): void {\n  player.boosterParticles = Decimal.dZero\n}\n\nexport function buyUpgrade(upgradeName: UpgradeName): void {\n  const upgrade = upgrades[upgradeName];\n  const oldCost = getUpgradeCost(upgradeName);\n\n  if (player[upgrade.currency].gte(oldCost)) {\n    player.upgrades[upgradeName].timesBought = player.upgrades[upgradeName].timesBought.plus(1);\n    player[upgrade.currency] = player[upgrade.currency].minus(oldCost);\n    upgrade.scaleFunction(upgradeName);\n    if (\"extra\" in upgrade) { \n      upgrade.extra();\n    }\n\n    if (!(\"costRounding\" in upgrade)) {\n      UpdateCostVal(\n        upgrade.costDiv,\n        getUpgradeCost(upgradeName),\n        upgrade.currency\n      );\n    }\n    else {\n      UpdateCostVal(\n        upgrade.costDiv,\n        getUpgradeCost(upgradeName),\n        upgrade.currency,\n        upgrade.costRounding\n      );\n    }\n  }\n}\nwindow.buyUpgrade = buyUpgrade;\n\nwindow.buyFiftySpeed = function (): void {\n  for (let i = 0; i < 50; i++) {\n    if (player.num.gte(getUpgradeCost('speed'))) {\n      buyUpgrade('speed')\n    }\n    else return;\n  }\n};\n","import { getElement } from \"./util\"\n\n//type Achievement = { text: string }\n\n/*const achievements: Achievement[] = [\n    { text: 'ach 1' },\n    { text: 'ach 2' },\n]*/\n\nexport function createAchievementHTML(): void {\n    const newDiv = document.createElement(\"div\")\n    newDiv.innerText = \"stuff\"\n    getElement('achievementContainer').appendChild(newDiv)\n}","import { D, getElement, formatb, formatbSpecific } from \"./util\";\nimport { player } from \"./player\";\nimport { type CurrencyName, currencyName } from \"./upgrades\";\nimport Decimal from \"break_eternity.js\";\n\nconst features = {\n    GB: {\n        displayName: \"Generator boost\",\n        unlocksAt: D(5000),\n        currency: \"num\",\n        next: \"Factory\"\n    },\n    Factory: {\n        displayName: \"Factory\",\n        unlocksAt: D(1e5),\n        currency: \"num\",\n        next: \"NP\"\n    },\n    NP: {\n        displayName: \"Nuclear Particles\",\n        unlocksAt: D(1e8),\n        currency: \"num\",\n        next: \"Bang\"\n    },\n    Bang: {\n        displayName: \"Bang\",\n        unlocksAt: D(1e9),\n        currency: \"num\",\n        next: \"BA\"\n    },\n    BA: {\n        displayName: \"Bang Autobuyer (in Omega tab)\",\n        unlocksAt: D(1e10),\n        currency: \"num\", next: \"PCA\"\n    },\n    PCA: {\n        displayName: \"Particle Chunk Autobuyer\",\n        unlocksAt: D(20),\n        currency: \"alphaNum\",\n        next: \"BS\"\n    },\n    BS: {\n        displayName: \"Boost Sacrifice\",\n        unlocksAt: D(1e5),\n        currency: \"boosterParticles\",\n        next: \"NAP\"\n    },\n    NAP: {\n        displayName: \"Nuclear Alpha Particles\",\n        unlocksAt: D(1e6),\n        currency: \"alphaNum\",\n        next: \"Merge\"\n    },\n    Merge: {\n        displayName: \"Merge\",\n        unlocksAt: D(1e9),\n        currency: \"alphaNum\", \n        next: \"Reactor\"\n    },\n    Reactor: {\n        displayName: \"Reactor\",\n        unlocksAt: D(300),\n        currency: \"betaNum\"\n    }\n} as const satisfies Record<FeatureKey, Feature>;\n\ntype FeatureKey =\n    | \"GB\"\n    | \"Factory\"\n    | \"NP\"\n    | \"Bang\"\n    | \"BA\"\n    | \"PCA\"\n    | \"BS\"\n    | \"NAP\"\n    | \"Merge\"\n    | \"Reactor\";\n\ninterface Feature {\n    displayName: string,\n    unlocksAt: Decimal,\n    currency: CurrencyName,\n    next?: FeatureKey\n}\n\nlet goal: FeatureKey | undefined = \"GB\";\n\nexport function nextFeatureHandler(): void {\n    if (goal === undefined) {\n        getElement(\"nextfeature\").textContent = \"You have unlocked all the features.\";\n        return;\n    }\n    \n    let feature = features[goal];\n    const featureCurrency = feature.currency;\n    const nextGoal = \"next\" in feature ? feature.next : undefined;\n\n    if (player[featureCurrency].gte(feature.unlocksAt)) {\n        goal = nextGoal;\n        if (goal === undefined) return;\n        feature = features[goal];\n    }\n\n    else {\n        const percentage = Decimal.times(\n            100,\n            player[featureCurrency].max(Decimal.dOne).log10()\n                .div(feature.unlocksAt.max(Decimal.dOne).log10())\n        ).max(Decimal.dZero);\n\n        getElement('nextfeature').textContent =\n            `Reach\n            ${formatb(feature.unlocksAt)}\n            ${currencyName[feature.currency]}\n            particles to unlock ${feature.displayName}\n            (${formatbSpecific(percentage)}%)`;\n    }\n}\n","import \"./style.css\";\nimport \"./music\"\nimport {\n   load,\n   loadSettings,\n   getUpgradeTimesBought,\n   getUpgradeCost,\n   player,\n   playerSettings,\n   UpgradeNames,\n   getSaveString,\n   type InstantAutobuyerName,\n   isAutobuyerName\n} from \"./player\";\nimport {\n   format,\n   formatb,\n   getElement,\n   D,\n   onBought,\n   onBoughtInc,\n   formatbSpecific,\n   formatD\n} from \"./util\";\nimport { UpdateCostVal, upgrades, buyUpgrade } from \"./upgrades\";\nimport { createAchievementHTML } from \"./achievements\";\nimport { nextFeatureHandler } from \"./features\";\nimport Decimal from \"break_eternity.js\";\n\ndeclare global {\n   interface Window {\n      theme: VoidFunction;\n      autosavesettings: VoidFunction;\n      openTab: (tab: string) => void;\n      saveExport: () => Promise<void>;\n      saveImport: VoidFunction;\n      saveImportConfirm: VoidFunction;\n      experimentalToggle: VoidFunction;\n      devToggle: VoidFunction;\n      mbman: VoidFunction;\n      gbboost: VoidFunction;\n      makechunk: VoidFunction;\n      bang: VoidFunction;\n      togglepca: VoidFunction;\n      buyomegabase: VoidFunction;\n      buyomegaalpha: VoidFunction;\n      buyomegabeta: VoidFunction;\n      buyomegagamma: VoidFunction;\n      buyomegadelta: VoidFunction;\n      toggleba: VoidFunction;\n      makegroup: VoidFunction;\n      merge: VoidFunction;\n      instantAutobuyerToggle: (\n         autobuyerVar: InstantAutobuyerName, \n         autobuyerDiv: string\n      ) => void;\n      buyFuel: (fuelType: Fuels) => void;\n      saveSettings: VoidFunction;\n      save: VoidFunction;\n      reset: VoidFunction;\n   }\n}\n\nloadSettings();\nload();\n\nconst divEntireBody = getElement(\"diventirebody\");\nconst html = getElement(\"html\");\nconst tabOpeners = getElement(\"tabopeners\");\nconst whatTheme = getElement(\"whattheme\");\nconst tabOpenFactory = getElement(\"tabopenfactory\");\nconst tabOpenAlpha = getElement(\"tabopenalpha\");\nconst tabOpenBeta = getElement(\"tabopenbeta\");\nconst tabOpenGamma = getElement(\"tabopengamma\");\nconst tabOpenDelta = getElement(\"tabopendelta\");\nconst tabOpenOmega = getElement(\"tabopenomega\");\nconst tabOpenOmegaOmega = getElement(\"tabopenomegaomega\");\nconst tabOpenReactor = getElement(\"tabopenreactor\");\nconst tabOpenStats = getElement(\"tabopenstats\");\nconst tabOpenAchievements = getElement(\"tabopenachievements\");\nconst tabOpenDev = getElement(\"tabopendev\");\nconst devToggle = getElement(\"devtoggle\");\nconst autosaveElement = getElement(\"autosaving\");\nconst untilPcaElement = getElement('untilpca');\nconst divTogglePcaElement = getElement('divtogglepca');\n\nconst delayArray = [600, 300, 150, 100, 50, 20, 10];\n\nconst themes = [\n   {\n      textColor: \"#EBEBEB\",\n      bgColor: \"rgb(34, 36, 34)\",\n      buttonColor: \"\",\n      borderColor: \"#BABABA\",\n      gradientColor: \"black\",\n      themeName: \"Dark Rework\",\n   },\n   {\n      textColor: \"#D4D4D4\",\n      bgColor: \"rgb(14, 16, 14)\",\n      buttonColor: \"\",\n      borderColor: \"#000000\",\n      gradientColor: \"black\",\n      themeName: \"Darker Rework\"\n   },\n   {\n      textColor: \"#000000\",\n      bgColor: \"#CCCCCC\",\n      buttonColor: \"\",\n      borderColor: \"#333333\",\n      gradientColor: \"white\",\n      buttonGradientOverride: true,\n      themeName: \"Light Rework\",\n   },\n   {\n      textColor: \"#000000\",\n      bgColor: \"#CCCCCC\",\n      buttonColor: \"\",\n      borderColor: \"#DD1111\",\n      gradientColor: \"white\",\n      buttonGradientOverride: true,\n      themeName: \"Red Borders\",\n   },\n   {\n      textColor: \"#CCCCCC\",\n      bgColor: \"#000000\",\n      buttonColor: \"#CCCCCC\",\n      borderColor: \"#CCCCCC\",\n      gradientColor: \"#444444\",\n      themeName: \"Black\",\n   },\n   {\n      textColor: \"#000000\",\n      bgColor: \"#FF91AF\",\n      buttonColor: \"#FFA1BF\",\n      borderColor: \"#FFD1FF\",\n      gradientColor: \"#FFA1BF\",\n      themeName: \"Pink\",\n   },\n   {\n      textColor: \"#3DD7DE\",\n      bgColor: \"#191970\",\n      buttonColor: \"#3DD7DE\",\n      borderColor: \"#3DD7DE\",\n      gradientColor: \"#7090FF\",\n      buttonGradientOverride: true,\n      themeName: \"Blue\",\n   },\n   {\n      textColor: \"#000000\",\n      bgColor: \"#DEB2EF\",\n      buttonColor: \"#8A7AED\",\n      borderColor: \"#6A5ACD\",\n      gradientColor: \"#5A1C61\",\n      buttonGradientOverride: true,\n      themeName: \"Purple\",\n   },\n   {\n      textColor: \"#EBEBEB\",\n      bgColor: \"#696969\",\n      buttonColor: \"#999999\",\n      borderColor: \"#000000\",\n      gradientColor: \"transparent\",\n      themeName: \"Classic\",\n   },\n   {\n      textColor: \"#EBEBEB\",\n      bgColor: \"#696969\",\n      buttonColor: \"#999999\",\n      borderColor: \"#000000\",\n      gradientColor: \"transparent\",\n      themeName: \"Classic Colors\",\n   }\n];\n\nfunction themeExec(): void {\n   const theme = themes[playerSettings.themeNumber];\n   if (theme === undefined) {\n      throw new Error(\"theme dosen't exist!\"); // skill issue to the user :laughing:\n   }\n   const { \n      textColor, \n      bgColor, \n      buttonColor, \n      borderColor, \n      gradientColor, \n      buttonGradientOverride, \n      themeName \n   } = theme;\n\n   divEntireBody.style.opacity = \"1\";\n   divEntireBody.style.color = textColor;\n   divEntireBody.style.fontFamily = \"Arial\"\n   getElement(\"Settings\").style.color = textColor;\n   document.body.style.backgroundColor = bgColor;\n   html.style.backgroundColor = bgColor;\n\n   const className = document.getElementsByClassName(\"button\");\n   for (const element of className) {\n      if (!(element instanceof HTMLElement)) {\n         throw new Error(`element is not an HTMLElement`);\n      }\n      element.style.backgroundColor = buttonColor;\n\n      if (themeName === \"Classic\") {\n         element.style.border = \"1px solid black\";\n         element.style.borderRadius = \"2px\";\n         element.style.background = buttonColor;\n         element.style.color = \"black\";\n         element.style.fontWeight = \"400\";\n      }\n      else {\n         element.style.border = \"2px solid black\";\n         element.style.borderRadius = \"8px\";\n         element.style.color = \"snow\";\n         element.style.fontWeight = \"500\";\n\n         if (buttonGradientOverride === undefined) {\n            element.style.background = `linear-gradient(45deg, ${gradientColor}, transparent)`;\n         }\n         else {\n            element.style.background = \"linear-gradient(45deg, black, transparent)\";\n         }\n      }\n   }\n\n   const className2 = document.getElementsByClassName(\"withtheoutline\");\n   for (const element of className2) {\n      if (!(element instanceof HTMLElement)) {\n         throw new Error(`element is not an HTMLElement`);\n      }\n      element.style.border = `0.2em solid ${borderColor}`;\n   }\n\n   const className3 = document.getElementsByClassName(\"redb\");\n   for (const element of className3) {\n      if (!(element instanceof HTMLElement)) {\n         throw new Error(`element is not an HTMLElement`);\n      }\n      element.style.backgroundColor = buttonColor;\n   }\n\n   tabOpeners.style.background = `linear-gradient(${gradientColor}, transparent)`;\n   whatTheme.textContent = `Theme: ${themeName}`;\n}\n\nthemeExec();\n\nwindow.theme = function (): void {\n   playerSettings.themeNumber = (playerSettings.themeNumber + 1) % themes.length;\n   themeExec();\n   saveSettings();\n};\n\nfunction prePUD(): void {\n   tabOpenFactory.style.display = \"none\";\n   tabOpenAlpha.style.display = \"none\";\n   tabOpenBeta.style.display = \"none\";\n   tabOpenReactor.style.display = \"none\";\n   tabOpenGamma.style.display = \"none\";\n   tabOpenDelta.style.display = \"none\";\n   tabOpenOmega.style.display = \"none\";\n   tabOpenStats.style.display = \"none\";\n   tabOpenOmegaOmega.style.display = \"none\";\n}\n\nfunction passiveUnlockDisplay(): void {\n   if (player.num.gte(1e5)) {\n      tabOpenFactory.style.display = \"inline\";\n   }\n   if (player.num.gte(1e9)) {\n      tabOpenAlpha.style.display = \"inline\";\n      tabOpenOmega.style.display = \"inline\";\n   }\n   if (player.alphaNum.gte(1e9)) {\n      tabOpenBeta.style.display = \"inline\";\n   }\n   if (player.betaNum.gte(300)) {\n      tabOpenReactor.style.display = \"inline\";\n   }\n   if (playerSettings.useExperimental) { //TODO: remove exprimental when you want\n      tabOpenGamma.style.display = \"inline\";\n      tabOpenDelta.style.display = \"inline\";\n      tabOpenOmegaOmega.style.display = \"inline\";\n      tabOpenStats.style.display = \"inline\";\n      tabOpenAchievements.style.display = \"inline\";\n   }\n}\n\nfunction devToolsVisibilityUpdate(): void {\n   tabOpenDev.style.display = playerSettings.devToggled ? \"inline\" : \"none\";\n   devToggle.textContent = playerSettings.devToggled.toString();\n}\n\nfunction autoSaveSet(): void {\n   const delay = delayArray[playerSettings.autoSaveMode];\n   playerSettings.autoSaveSet = playerSettings.autoSaveDelay = delay ?? 1e308;\n   autosaveElement.textContent = delay !== undefined\n      ? `On, delay: ${format(delay / 10)}s`\n      : \"Off\";\n}\n\nwindow.autosavesettings = function (): void {\n   playerSettings.autoSaveMode = (playerSettings.autoSaveMode + 1) % delayArray.length;\n   autoSaveSet();\n   saveSettings();\n};\n\nfunction pcaTestSingle(): void {\n   if (getUpgradeTimesBought('unlockpca').eq(Decimal.dOne)) {\n      untilPcaElement.textContent = \n         format(player.chunkAutobuyerTimeLeft) + ' left until next autobuy';\n      getElement('divtogglepca').style.display = 'inline-block';\n\n      divTogglePcaElement.textContent = player.pcaToggle ? 'on' : 'off';\n   }\n}\n\nfunction baTestSingle() {\n   if (getUpgradeTimesBought('bangautobuyerunlock').eq(Decimal.dOne)) {\n      getElement('untilba').textContent =\n         format(player.bangAutobuyerTimeLeft) + ' left until next autobuy';\n      getElement('divtoggleba').style.display = 'inline-block';\n\n      getElement('divtoggleba').textContent = player.bangAutobuyerToggle ? 'on' : 'off';\n   }\n}\n\nfunction fgbTestSingle() {\n   if (getUpgradeTimesBought('gen').eq(Decimal.dZero)) {\n      getElement('divgencost').textContent = 'Cost: Free';\n   } else {\n      UpdateCostVal('divgencost', getUpgradeCost('gen'));\n   }\n}\n\nlet nuclearParticles = getUpgradeTimesBought('nuclearbuy')\nif (getUpgradeTimesBought('unlocknpboost').eq(Decimal.dOne)) {\n   nuclearParticles = onBought(\n      [\n         'nuclearbuy',\n         '*',\n         [\n            Decimal.dOne, '+',\n            [\n               'upgradenpboost',\n               '+',\n               Decimal.dOne,\n               '/', Decimal.dTen\n            ]\n         ]\n      ]\n   )\n}\nlet nuclearAlphaParticles = getUpgradeTimesBought('nuclearalphabuy')\nif (getUpgradeTimesBought('unlocknapboost').eq(Decimal.dOne)) {\n   nuclearAlphaParticles = onBought(\n      [\n         'nuclearalphabuy',\n         '*',\n         [\n            Decimal.dOne,\n            '+',\n            [\n               'upgradenapboost',\n               '+',\n               Decimal.dOne,\n               '/',\n               Decimal.dTen\n            ]\n         ]\n      ]\n   )\n}\n\nfunction instantAutobuyerState(autobuyerVar: InstantAutobuyerName, autobuyerDiv: string): void {\n   getElement(autobuyerDiv).textContent = player.instantAutobuyers[autobuyerVar] ? \"On\" : \"Off\";\n}\n\nfunction amountUpdate() {\n   if (getUpgradeTimesBought('unlocknpboost').eq(Decimal.dOne)) {\n      getElement('divnp').textContent =\n         'Nuclear Particles: ' + formatD(nuclearParticles, 1);\n   }\n   else {\n      getElement('divnp').textContent =\n         'Nuclear Particles: ' + formatb(getUpgradeTimesBought('nuclearbuy'));\n   }\n   if (getUpgradeTimesBought('unlocknapboost').eq(Decimal.dOne)) {\n      getElement('divnap').textContent =\n         'Nuclear Alpha Particles: ' + formatD(nuclearAlphaParticles, 1);\n   }\n   else {\n      getElement('divnap').textContent =\n         'Nuclear Alpha Particles: ' + formatb(getUpgradeTimesBought('nuclearalphabuy'));\n   }\n\n   getElement('chunkamount').textContent =\n      'Particle Chunks: ' + formatb(player.pChunks);\n   getElement('groupamount').textContent =\n      'Particle Chunks: ' + formatb(player.aGroups);\n\n   getElement('omegabasecost').textContent =\n      'Cost: ' + formatb(player.omegaBaseCost);\n   getElement('divobase').textContent = 'You have ' + formatb(player.omegaBase);\n   getElement('omegaalphacost').textContent =\n      'Cost: ' + formatb(player.omegaAlphaCost);\n   getElement('divoalpha').textContent = 'You have ' + formatb(player.omegaAlpha);\n\n   for (const autobuyerName in player.instantAutobuyers) {\n      const autobuyerDiv = `div${autobuyerName}`;\n\n      if (!isAutobuyerName(autobuyerName)) {\n         throw new Error(\"autoBuyerName dosen't match InstantAutobuyerName type\")\n      }\n      instantAutobuyerState(autobuyerName, autobuyerDiv);\n   }\n}\n\nfunction loadMisc(): void {\n   for (const upgradeName of UpgradeNames) {\n      const upgrade = upgrades[upgradeName];\n      if (!(\"costRounding\" in upgrade)) {\n         UpdateCostVal(\n            upgrade.costDiv,\n            getUpgradeCost(upgradeName),\n            upgrade.currency\n         );\n      }\n      else {\n         UpdateCostVal(\n            upgrade.costDiv,\n            getUpgradeCost(upgradeName),\n            upgrade.currency,\n            upgrade.costRounding\n         );\n      }\n   }\n\n   themeExec();\n\n   prePUD();\n   passiveUnlockDisplay();\n\n   autoSaveSet();\n\n   devToolsVisibilityUpdate();\n\n   pcaTestSingle();\n   baTestSingle();\n   fgbTestSingle();\n\n   getElement(\"counter\").innerHTML = \"<span style='color: #64ed93;'>\" + formatb(player.num) + \"</span> particles\";\n   getElement(\"particlespersecond\").innerHTML =\n      \"You are getting <span style='color: #ed6464;'> 0 </span> particles/s\";\n\n   amountUpdate();\n}\n\nfunction makeElementMap(...names: string[]): Record<string, HTMLElement> {\n   return Object.fromEntries(names.map(x => [x, getElement(x)] as const));\n}\n\nconst tabElements = makeElementMap(\n   'Base',\n   'Factory',\n   'Alpha',\n   'Beta',\n   'Reactor',\n   'Gamma',\n   'Delta',\n   'Omega',\n   'OmegaOmega',\n   'Achievements',\n   'Stats',\n   'Settings',\n   'Tutorial',\n   'Dev'\n);\nconst tabOmegaElements = makeElementMap(\n   'oBase',\n   'oAlpha',\n   'oBeta',\n   'oGamma',\n   'oDelta'\n);\n\nfunction hideElements(elements: Record<string, HTMLElement>) {\n   for (const name in elements) {\n      const element = elements[name];\n      if (element === undefined) {\n         throw new Error(\"element dosen't exist\");\n      }\n      element.style.display = 'none';\n   }\n}\n\nwindow.openTab = function (tab: string): void {\n   if (tab in tabOmegaElements) {\n      hideElements(tabOmegaElements);\n   } else {\n      hideElements(tabElements);\n   }\n   getElement(tab).style.display = 'block';\n};\n\nloadMisc();\n\nwindow.saveExport = async function (): Promise<void> {\n   await navigator.clipboard.writeText(save());\n   alert('Copied to clipboard!')\n};\n\nwindow.saveImport = function (): void {\n   getElement('importareaid').style.display = 'block';\n   getElement('saveimportconfirm').style.display = 'block';\n};\n\nwindow.saveImportConfirm = function (): void {\n   const saveEl = getElement('importareaid', 'textarea');\n   const savefile = saveEl.value; // really should check for an empty value here\n   localStorage.setItem(location.pathname, savefile);\n   location.reload();\n};\n\nwindow.experimentalToggle = function () {\n   playerSettings.useExperimental = !playerSettings.useExperimental;\n\n   if (playerSettings.useExperimental) {\n      getElement('tabopengamma').style.display = 'inline';\n      getElement('tabopendelta').style.display = 'inline';\n      getElement('tabopenomegaomega').style.display = 'inline';\n      getElement('tabopenachievements').style.display = 'inline';\n   }\n   else {\n      getElement('tabopengamma').style.display = 'none';\n      getElement('tabopendelta').style.display = 'none';\n      getElement('tabopenomegaomega').style.display = 'none';\n      getElement('tabopenachievements').style.display = 'none';\n   }\n   getElement('experimentoggle').textContent = playerSettings.useExperimental.toString();\n   saveSettings();\n}\n\nwindow.devToggle = function () {\n   playerSettings.devToggled = !playerSettings.devToggled;\n\n   if (playerSettings.devToggled) {\n      getElement('tabopendev').style.display = 'inline';\n   }\n   else {\n      getElement('tabopendev').style.display = 'none';\n   }\n   getElement('devtoggle').textContent = playerSettings.devToggled.toString();\n   saveSettings();\n}\n\ncreateAchievementHTML();\n\n//early var init\nlet machineProd = 10\nlet clickerParticleMult = player.\n    clickerParticles\n    .div(100)\n    .plus(Decimal.dOne)\n    .times(machineProd);\n\nconst reactor = {\n   isActive: false,\n   fuelTime: D(300),\n   boost: Decimal.dOne,\n   fuelMult: Decimal.dOne,\n}\n//did a bunch of work here\nlet NAPfactor: Decimal = Decimal.dOne;\nlet BPfactor: Decimal = Decimal.dOne;\nlet MBfactor: Decimal = Decimal.dOne;\nlet GBfactor: Decimal = Decimal.dOne;\n\nlet totalBoostFromNP = nuclearParticles.times(reactor.boost);\nlet totalBoostFromNAP: Decimal = nuclearAlphaParticles.times(NAPfactor);\nlet totalMBBoost = MBfactor.times(Decimal.dTwo.pow(getUpgradeTimesBought(\"reactorupMB\")))\n\nfunction reactorHandler() {\n   reactor.fuelTime = onBought(\n      [D(300), '*', [D(1.25), '^', 'reactoruptime'], '/', [Decimal.dTwo, '^', 'reactorupmult']]\n   )\n\n   if (player.hyperfuel.lte(Decimal.dZero)) {\n      player.hyperfuel = Decimal.dZero;\n\n      if (player.superfuel.lte(Decimal.dZero)) {\n         player.superfuel = Decimal.dZero;\n\n         if (player.fuel.lte(Decimal.dZero)) {\n            player.fuel = Decimal.dZero;\n\n            reactor.isActive = false;\n         }\n         else {\n            reactor.fuelMult = Decimal.dOne;\n            reactor.isActive = true;\n            player.fuel = player.fuel.minus(\n               Decimal.dOne.div(reactor.fuelTime)\n            )\n         }\n      }\n      else {\n         reactor.fuelMult = D(3);\n         reactor.isActive = true;\n         player.superfuel = player.superfuel.minus(\n            Decimal.dOne.div(reactor.fuelTime)\n         )\n      }\n   }\n   else {\n      reactor.fuelMult = D(6561);\n      reactor.isActive = true;\n      player.hyperfuel = player.hyperfuel.minus(\n         Decimal.dOne.div(reactor.fuelTime)\n      )\n   }\n\n   if (reactor.isActive) {\n      reactor.boost = onBoughtInc(\n         [[D(1.25), '^', 'reactorupmult'], '*', reactor.fuelMult]\n      )\n      getElement('divreactorstatus').textContent = `Reactor status: Running (${formatD(player.fuel, 2)} Fuel)`\n   }\n   else {\n      reactor.boost = Decimal.dOne;\n      getElement('divreactorstatus').textContent = \"Reactor status: Out of fuel\"\n   }\n   getElement('divreactorfuelusage').textContent = `When active, your reactor is using up 1 fuel every ${formatb(reactor.fuelTime.div(10))} seconds`\n\n   let NAPtoggle = false;\n   let BPtoggle = false;\n   let MBtoggle = false;\n   let GBtoggle = false;\n\n   if (getUpgradeTimesBought('reactorUnlockNAP').eq(Decimal.dOne)) {\n      NAPtoggle = true;\n      getElement('divreactorunlockNAPcost').textContent = 'Unlocked';\n      getElement('divreactornap').style.display = 'block';\n   }\n   if (getUpgradeTimesBought('reactorUnlockBP').eq(Decimal.dOne)) {\n      BPtoggle = true;\n      getElement('divreactorunlockBPcost').textContent = 'Unlocked';\n      getElement('divreactorbp').style.display = 'block';\n   }\n   if (getUpgradeTimesBought('reactorUnlockMB').eq(Decimal.dOne)) {\n      MBtoggle = true;\n      getElement('divreactorunlockMBcost').textContent = 'Unlocked';\n      getElement('divreactormb').style.display = 'block';\n   }\n   if (getUpgradeTimesBought('reactorUnlockGB').eq(Decimal.dOne)) {\n      GBtoggle = true;\n      getElement('divreactorunlockGBcost').textContent = 'Unlocked';\n      getElement('divreactorgb').style.display = 'block';\n   }\n\n   NAPfactor =  NAPtoggle ? reactor.boost.plus(Decimal.dOne).div(Decimal.dTwo) : Decimal.dOne;\n   BPfactor = BPtoggle ? reactor.boost.plus(3).div(4) : Decimal.dOne;\n   MBfactor = MBtoggle ? reactor.boost.pow(Decimal.dTwo) : Decimal.dOne;\n   GBfactor = GBtoggle ? reactor.boost.plus(Decimal.dTwo).div(3) : Decimal.dOne;\n\n   if (!reactor.isActive) { //just to make sure boosts are definitely inactive when reactor is out of fuel\n      NAPfactor = Decimal.dOne;\n      BPfactor = Decimal.dOne;\n      GBfactor = Decimal.dOne;\n      MBfactor = Decimal.dOne;\n      totalMBBoost = Decimal.dOne;\n   }\n   else {\n      totalMBBoost = MBfactor.times(Decimal.dTwo.pow(getUpgradeTimesBought(\"reactorupMB\")))\n   }\n\n   totalBoostFromNP = nuclearParticles.times(reactor.boost);\n   totalBoostFromNAP = nuclearAlphaParticles.times(NAPfactor);\n  \n   getElement('divreactormain').textContent = `Current Reactor effects:`\n   getElement('divreactornp').textContent =`Nuclear Particles ${formatbSpecific(reactor.boost)}x as strong`\n   getElement('divreactormb').textContent =`Manual Boost ${formatbSpecific(totalMBBoost)}x as strong`\n   getElement('divreactornap').textContent =`Nuclear Alpha Particles ${formatbSpecific(NAPfactor)}x as strong`\n   getElement('divreactorgb').textContent =`Generator Boost ${formatbSpecific(GBfactor)}x as strong`\n   getElement('divreactorbp').textContent =`Booster Particle gain increase by ${formatbSpecific(BPfactor)}x`\n}\n\nwindow.mbman = function (): void {\n   const gain: Decimal = onBoughtInc(\n      \"mbup\",\n      \"*\",\n      \"mbmult\",\n      \"*\",\n      clickerParticleMult,\n      \"*\",\n      totalBoostFromNP.plus(Decimal.dOne),\n      \"*\",\n      totalMBBoost\n   )\n\n   player.num = player.num.plus(gain);\n   getElement(\"counter\").textContent = formatb(player.num);\n}\n\nwindow.gbboost = function (): void {\n   player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n};\n\nfunction makechunk(): void {\n   if (player.num.gte(1e9)) {\n      player.num = player.num.minus(1e9);\n      player.pChunks = player.pChunks.plus(Decimal.dOne);\n      getElement('chunkamount').textContent =\n         'Particle Chunks: ' + formatb(player.pChunks);\n   }\n}\nwindow.makechunk = makechunk;\n\nfunction bang(): void {\n   if (player.pChunks.gte(Decimal.dTwo)) {\n      if (\n         getUpgradeTimesBought('alphaacc').gt(Decimal.dZero) &&\n         !(player.bangTimeLeft >= 0 && player.bangTimeLeft <= player.bangTime)\n      ) {\n         player.pChunks = player.pChunks.minus(Decimal.dTwo);\n         player.bangTimeLeft = player.bangTime;\n         getElement('chunkamount').textContent =\n            'Particle Chunks: ' + formatb(player.pChunks);\n         getElement('boostersmaintext').style.display = 'block';\n      }\n   }\n}\nwindow.bang = bang;\n\nwindow.togglepca = function (): void {\n   if (getUpgradeTimesBought('unlockpca').eq(Decimal.dOne)) {\n      player.pcaToggle = !player.pcaToggle;\n      getElement('divtogglepca').style.display = 'inline-block';\n\n      getElement('divtogglepca').textContent = \n          player.pcaToggle ? \"On\" :\"Off\";\n   }\n};\n\nwindow.buyomegabase = function (): void {\n   if (player.num.gte(player.omegaBaseCost)) {\n      player.num = player.num.minus(player.omegaBaseCost);\n      player.omegaBase = player.omegaBase.plus(Decimal.dOne);\n      player.omegaBaseCost = player.omegaBaseCost.times(Decimal.dTen);\n      getElement('omegabasecost').textContent =\n         'Cost: ' + formatb(player.omegaBaseCost);\n      getElement('divobase').textContent = 'You have ' + formatb(player.omegaBase);\n   }\n};\n\nwindow.buyomegaalpha = function (): void {\n   if (player.alphaNum.gte(player.omegaAlphaCost)) {\n      player.alphaNum = player.alphaNum.minus(player.omegaAlphaCost);\n      player.omegaAlpha = player.omegaAlpha.plus(Decimal.dOne);\n      player.omegaAlphaCost = player.omegaAlphaCost.times(100);\n      getElement('omegaalphacost').textContent =\n         'Cost: ' + formatb(player.omegaAlphaCost);\n      getElement('divoalpha').textContent = 'You have ' + formatb(player.omegaAlpha);\n   }\n};\n\nwindow.buyomegabeta = function (): void {\n   /* TODO: implement this */\n};\nwindow.buyomegagamma = function (): void {\n   /* TODO: implement this */\n};\nwindow.buyomegadelta = function (): void {\n   /* TODO: implement this */\n};\n\nwindow.toggleba = function (): void {\n   if (getUpgradeTimesBought('bangautobuyerunlock').eq(Decimal.dOne)) {\n      player.bangAutobuyerToggle = !player.bangAutobuyerToggle;\n      getElement('divtoggleba').style.display = 'inline-block';\n\n      if (player.bangAutobuyerToggle) {\n         getElement('divtoggleba').textContent = 'On';\n      } else {\n         getElement('divtoggleba').textContent = 'Off';\n      }\n   }\n};\n\nfunction makegroup(): void {\n   if (player.alphaNum.gte(1e9)) {\n      player.alphaNum = player.alphaNum.minus(1e9);\n      player.aGroups = player.aGroups.plus(Decimal.dOne);\n      getElement('groupamount').textContent =\n         'Alpha Groups: ' + formatb(player.aGroups);\n   }\n}\nwindow.makegroup = makegroup;\n\nwindow.merge = function (): void {\n   if (player.aGroups.gte(Decimal.dTwo)) {\n      if (\n         getUpgradeTimesBought('betaacc').gt(Decimal.dZero) &&\n         !(player.mergeTimeLeft >= 0 && player.mergeTimeLeft <= player.mergeTime)\n      ) {\n         player.aGroups = player.aGroups.minus(Decimal.dTwo);\n         player.mergeTimeLeft = player.mergeTime;\n         getElement('groupamount').textContent =\n            'Alpha Groups: ' + formatb(player.aGroups);\n      }\n   }\n}\n\nwindow.instantAutobuyerToggle = function (autobuyerVar: InstantAutobuyerName, autobuyerDiv: string): void {\n   player.instantAutobuyers[autobuyerVar] = !player.instantAutobuyers[autobuyerVar]\n   getElement(autobuyerDiv).textContent = player.instantAutobuyers[autobuyerVar] ? \"On\" : \"Off\"\n}\n\ntype Fuels = \n  | 'player.fuel' \n  | 'player.superfuel' \n  | 'player.hyperfuel';\n\nwindow.buyFuel = function (fuelType: Fuels) {\n   if (fuelType === 'player.fuel') {\n      if (player.num.gte(1e27) && player.alphaNum.gte(1e10) && player.betaNum.gte(50)) {\n         player.num = player.num.minus(1e27)\n         player.alphaNum = player.alphaNum.minus(1e10)\n         player.betaNum = player.betaNum.minus(50)\n         player.fuel = player.fuel.plus(Decimal.dOne)\n      }\n   }\n   else {\n      //do this later TODO:\n   }\n}\n\nfunction fgbTestConst(): void {\n   if (getUpgradeTimesBought('gen').gt(Decimal.dZero)) {\n      getElement('boostsection').style.display = 'flex';\n      getElement('bigboosttext').style.display = 'block';\n      getElement('veryouterboost').style.display = 'block';\n\n      if (getUpgradeTimesBought('unlocknpboost').eq(Decimal.dOne)) {\n         nuclearParticles = onBought(\n            ['nuclearbuy', '*', [Decimal.dOne, '+', ['upgradenpboost', '+', Decimal.dOne, '/', D(10)]]]\n         )\n         getElement('npboostshow').style.display = 'block';\n         getElement('npboostunlockbutton').style.display = 'none'\n         getElement('divnpboostcost').style.display = 'none'\n      }\n      else {\n         nuclearParticles = getUpgradeTimesBought('nuclearbuy')\n         getElement('npboostshow').style.display = 'none';\n      }\n      if (getUpgradeTimesBought('unlocknapboost').eq(Decimal.dOne)) {\n         nuclearAlphaParticles = onBought(\n            ['nuclearalphabuy', '*', [Decimal.dOne, '+', ['upgradenapboost', '+', Decimal.dOne, '/', D(10)]]]\n         )\n         getElement('napboostshow').style.display = 'block';\n         getElement('napboostunlockbutton').style.display = 'none'\n         getElement('divnapboostcost').style.display = 'none'\n      }\n      else {\n         nuclearAlphaParticles = getUpgradeTimesBought('nuclearalphabuy')\n         getElement('napboostshow').style.display = 'none';\n      }\n\n      if (getUpgradeTimesBought('gen').eq(Decimal.dZero)) {\n         getElement('divgencost').textContent = 'Cost: Free';\n      } else {\n         UpdateCostVal('divgencost', getUpgradeCost('gen'));\n      }\n\n      reactorHandler();\n\n      getElement('nptext').textContent = `Nuclear particles add a +${formatD(reactor.boost, 2)}x multiplier to generators, generator boost, and manual boost`\n      getElement('naptext').textContent = `Nuclear particles add a +${formatD(reactor.boost, 2)}x multiplier to alpha gain`\n\n\n      const boostsacmult = D(1.5).pow(getUpgradeTimesBought('boostsacrifice'))\n\n      getElement('boostsactext').textContent = `Reset your Booster Particles, but increase Booster Particle and Alpha Particle gain. Currently ${formatD(boostsacmult, 1)}x.`\n\n\n      if (player.genBoostTimeLeft.greaterThan(Decimal.dZero)) {\n         player.genBoostMult = (getUpgradeTimesBought('genboostupmult').times(1.5).plus(Decimal.dTwo)).times(GBfactor);\n      } else {\n         player.genBoostMult = Decimal.dOne;\n      }\n\n      if (getUpgradeTimesBought('unlockgenboost').eq(Decimal.dOne)) {\n         getElement('gbshow').style.display = 'block';\n         getElement('divgenunlockcost').style.display = 'none';\n         getElement('gbunlockbutton').style.display = 'none';\n      }\n\n      if (getUpgradeTimesBought('unlockabgb').eq(Decimal.dOne)) {\n         getElement('abgbshow').style.display = 'block';\n         getElement('divabgbcost').style.display = 'none';\n         getElement('abgbunlockbutton').style.display = 'none';\n      }\n\n      player.bangTime = Math.ceil(\n         300 / Math.pow(2, getUpgradeTimesBought('bangspeed').toNumber())\n      );\n\n      const alphaGain = onBought(\n         'alphaacc', ['perbang', '+', Decimal.dOne], [totalBoostFromNAP, '+', Decimal.dOne], [Decimal.dTwo, '^', 'alphamachinedouble']\n      ).times(boostsacmult);\n\n      player.mergeTime = Math.ceil(\n         300 / Math.pow(2, getUpgradeTimesBought('mergespeed').toNumber())\n      );\n\n      const betaGain = onBought(\n         'betaacc', ['permerge', '+', Decimal.dOne]\n      );\n\n      if (player.bangTimeLeft === 0) {\n         player.alphaNum = player.alphaNum.plus(alphaGain);\n         getElement('bangtimeleft').textContent = '';\n      }\n\n      if (player.mergeTimeLeft === 0) {\n         player.betaNum = player.betaNum.plus(betaGain);\n         getElement('mergetimeleft').textContent = '';\n      }\n\n      if (getUpgradeTimesBought('machine').gte(Decimal.dOne)) {\n         machineProd = (9 / Math.log10(player.machineWear)) + 1\n         player.machineWear += 1\n      }\n\n      clickerParticleMult = player.clickerParticles.div(50).plus(Decimal.dOne);\n\n      let abgbBoost = Decimal.dOne\n\n      if (getUpgradeTimesBought('unlockabgb').gt(Decimal.dZero)) {\n         abgbBoost = onBoughtInc(\n            player.alphaNum.cbrt(), '/', D(100), '*', 'abgbefficiency', '+', Decimal.dOne\n         )\n      }\n\n      getElement('abgbtext').textContent = `Your alpha-based generator boost is multiplying your generators by ${formatb(abgbBoost)}x (cbrt(alpha)/100*${formatD(getUpgradeTimesBought(\"abgbefficiency\").plus(Decimal.dOne))})`\n\n      const gain: Decimal = onBought(\n         ['biggerbatches', '+', Decimal.dOne], '*', 'gen', '*', ['speed', '/', D(10), '+', D(0.1)], '*', player.genBoostMult, '*', [[totalBoostFromNP, '+', Decimal.dOne], '^', Decimal.dTwo], '*',\n         [D(3), '^', 'threeboost'], '*', [Decimal.dOne, '+', [[player.boosterParticles, '+', Decimal.dOne], '/', D(100), '*', [['boosteruppercent', '+', Decimal.dOne], '/', D(100)]]], '*', abgbBoost, \"*\", GBfactor\n      );\n\n      getElement('particlesperclick').textContent =\n         'You are getting ' +\n         formatb(onBought(['mbup', '+', Decimal.dOne], '*', ['mbmult', '+', Decimal.dOne], '*', [totalBoostFromNP, '+', Decimal.dOne]).times(clickerParticleMult).times(totalMBBoost)\n         ) +\n         ' particles per click';\n\n      getElement('alphapb').textContent =\n         'You are getting ' + formatb(alphaGain) + ' Alpha/bang';\n      getElement('bangtimeconst').textContent =\n         'Currently, bangs take ' + format(player.bangTime / 10) + ' seconds.';\n      player.bangTimeLeft -= 1;\n\n      if (player.bangTimeLeft >= 0 && player.bangTimeLeft <= player.bangTime) {\n         getElement('bangtimeleft').textContent =\n            'Bang time left: ' + format(player.bangTimeLeft / 10);\n         getElement('bangbutton').style.display = 'none';\n      } else {\n         getElement('bangbutton').style.display = 'block';\n      }\n\n      getElement('betapb').textContent =\n         'You are getting ' + formatb(betaGain) + ' Beta/merge';\n      getElement('mergetimeconst').textContent =\n         'Currently, merges take ' + format(player.mergeTime / 10) + ' seconds.';\n      player.mergeTimeLeft -= 1;\n\n      if (player.mergeTimeLeft >= 0 && player.mergeTimeLeft <= player.mergeTime) {\n         getElement('mergetimeleft').textContent =\n            'Merge time left: ' + format(player.mergeTimeLeft / 10);\n         getElement('mergebutton').style.display = 'none';\n      } else {\n         getElement('mergebutton').style.display = 'block';\n      }\n\n      if (player.genBoostTimeLeft.gt(Decimal.dZero)) {\n         player.genBoostTimeLeft = player.genBoostTimeLeft.minus(Decimal.dOne);\n      }\n      getElement('divgbtl').textContent =\n         'Boost Time Left: ' + formatb(player.genBoostTimeLeft.div(Decimal.dTen));\n\n      const bpGain = (player.alphaNum.times(\n         getUpgradeTimesBought('boosterup').plus(Decimal.dOne)\n      )).times(Decimal.dTwo).div(Decimal.dTen).times(BPfactor);\n      player.boosterParticles = player.boosterParticles.plus(bpGain);\n      const percentBoostDisplay =\n         player.boosterParticles.times(\n            getUpgradeTimesBought('boosteruppercent').plus(Decimal.dOne).div(100)\n         );\n\n      if (percentBoostDisplay.lt(100)) {\n         getElement('boostersmaintext').textContent =\n            `You are currently getting ${formatb(bpGain.times(Decimal.dTen).div(player.alphaNum))} booster particles per alpha particle per second,\n               resulting in a +${formatbSpecific(percentBoostDisplay)}% boost to base particle production`;\n      }\n      else {\n         getElement('boostersmaintext').textContent =\n            `You are currently getting ${formatb(bpGain.times(Decimal.dTen).div(player.alphaNum))} booster particles per alpha particle per second,\n               resulting in a ${formatbSpecific(percentBoostDisplay.div(100).plus(1))}x boost to base particle production`;\n\n      }\n\n      getElement('bpamount').textContent =\n         'You have ' + formatb(player.boosterParticles) + ' booster particles';\n\n      const clickerParticleGain = onBought(\n         [['machine', '*', [D(1.5), '^', 'speedparticle']], '/', Decimal.dTen]\n      ).times(machineProd)\n      player.clickerParticles = player.clickerParticles.plus(clickerParticleGain);\n\n      nextFeatureHandler();\n\n      getElement('omegabasecost').textContent =\n         'Cost: ' + formatb(player.omegaBaseCost);\n      getElement('divobase').textContent = 'You have ' + formatD(player.omegaBase, 1);\n      getElement('omegaalphacost').textContent =\n         'Cost: ' + formatb(player.omegaAlphaCost);\n      getElement('divoalpha').textContent = 'You have ' + formatD(player.omegaAlpha, 1);\n\n      player.num = player.num.plus(gain);\n\n      getElement(\"particlespersecond\").innerHTML =\n         \"You are getting <span style='color: #ed6464;'>\" + formatb(gain.times(10)) + \"</span> particles/s\";\n\n      if (player.num.gte(1e8)) {\n         getElement('nuclearreach').style.display = 'none';\n         getElement('nuclearshow').style.display = 'block';\n      }\n\n      if (player.alphaNum.gte(1e6)) {\n         getElement('nuclearalphareach').style.display = 'none';\n         getElement('nuclearalphashow').style.display = 'block';\n      }\n\n      if (player.num.gte(1e9)) {\n         getElement('bangshow').style.display = 'block';\n      }\n\n      if (player.alphaNum.gte(1e9)) {\n         getElement('mergeshow').style.display = 'block';\n\n         getElement(\"oAlphauupre\").style.display = 'none';\n         getElement(\"oAlphauupost\").style.display = 'block';\n      }\n\n      if (player.boosterParticles.gte(1e5) || getUpgradeTimesBought('boostsacrifice').gt(0)) {\n         getElement('bpsacshow').style.display = 'block';\n      }\n\n      const freeNuclearParticles = nuclearParticles.minus(getUpgradeTimesBought('nuclearbuy'))\n      getElement('npboosttext').textContent = \n          `Your Nuclear Particles Boost is giving you \n          ${formatD(freeNuclearParticles, 1)} \n          free Nuclear Particles`;\n      const freeNuclearAlphaParticles = nuclearAlphaParticles.minus(\n         getUpgradeTimesBought('nuclearalphabuy')\n      );\n      getElement('napboosttext').textContent = \n          `Your Nuclear Alpha Particles Boost is giving you \n          ${formatD(freeNuclearAlphaParticles, 1)} \n          free Nuclear Alpha Particles`;\n\n      getElement(\"counter\").innerHTML = \n          `<span style=\"color: #64ed93\">\n          ${formatb(player.num)}\n          </span> particles`;\n      getElement('clickercounter').textContent = \n          `You have \n          ${formatb(player.clickerParticles)} \n          Clicker Particles \n          (${formatb(clickerParticleGain.times(Decimal.dTen))}\n          /s), which are making Manual Boost \n          ${formatbSpecific(clickerParticleMult)}\n          x stronger.`\n      getElement('alphacounter').textContent =\n         formatb(player.alphaNum) + ' Alpha particles';\n      getElement('betacounter').textContent =\n         formatb(player.betaNum) + ' Beta particles';\n\n      if (getUpgradeTimesBought('alphaacc').eq(Decimal.dZero)) {\n         getElement('bangwarn').style.display = 'block'\n      }\n      else {\n         getElement('bangwarn').style.display = 'none'\n      }\n   }\n}\n\nfunction pcaTestConst(): void {\n   if (getUpgradeTimesBought('unlockpca').eq(Decimal.dOne)) {\n      getElement('pcashow').style.display = 'block';\n      getElement('divunlockpca').style.display = 'none';\n      getElement('divunlockpcabutton').style.display = 'none';\n\n      if (player.pcaToggle === true) {\n         if (player.chunkAutobuyerTimeLeft === 0) {\n            player.chunkAutobuyerTimeLeft = player.pcaTime;\n            makechunk();\n         }\n\n         player.chunkAutobuyerTimeLeft--;\n         getElement('untilpca').textContent =\n            format(player.chunkAutobuyerTimeLeft / 10) + ' left until next autobuy';\n      }\n   }\n}\n\nfunction baTestConst(): void {\n   if (getUpgradeTimesBought('bangautobuyerunlock').eq(Decimal.dOne)) {\n      getElement('bashow').style.display = 'block';\n      getElement('divbau').style.display = 'none';\n      getElement('divbauextra').style.display = 'none';\n      getElement('baunlockbutton').style.display = 'none';\n\n      if (player.bangAutobuyerToggle === true) {\n         if (player.bangAutobuyerTimeLeft === 0) {\n            player.bangAutobuyerTimeLeft = player.bangAutobuyerTime;\n            bang();\n         }\n\n         player.bangAutobuyerTimeLeft--;\n         getElement('untilba').textContent =\n            format(player.bangAutobuyerTimeLeft) + ' left until next autobuy';\n      }\n   }\n}\n\nfunction instantAutobuyers() {  //TODO: make this function not look like absolute garbage\n   if (getUpgradeTimesBought('GnBBAunlock').eq(Decimal.dOne)) {\n      if (player.instantAutobuyers.genAutobuyerToggle) {\n         buyUpgrade('gen');\n      }\n      if (player.instantAutobuyers.bbAutobuyerToggle) {\n         buyUpgrade('biggerbatches');\n      }\n      getElement('divGnBBA').style.display = 'none'\n      getElement('divGnBBAhide').style.display = 'block'\n   }\n   if (getUpgradeTimesBought('GBUAunlock').eq(Decimal.dOne)) {\n      if (player.instantAutobuyers.genBoostTimeAutobuyerToggle) {\n         buyUpgrade('genboostuptime')\n      }\n      if (player.instantAutobuyers.genBoostMultAutobuyerToggle) {\n         buyUpgrade('genboostupmult')\n      }\n      getElement('divGBUA').style.display = 'none'\n      getElement('divGBUAhide').style.display = 'block'\n   }\n   if (getUpgradeTimesBought('MBUAunlock').eq(Decimal.dOne)) {\n      if (player.instantAutobuyers.manBoost1perClickAutobuyerToggle) {\n         buyUpgrade('mbup')\n      }\n      if (player.instantAutobuyers.manBoost1xperClickAutobuyerToggle) {\n         buyUpgrade('mbmult')\n      }\n      getElement('divMBUA').style.display = 'none'\n      getElement('divMBUAhide').style.display = 'block'\n   }\n   if (getUpgradeTimesBought('NPAunlock').eq(Decimal.dOne)) {\n      if (player.instantAutobuyers.nuclearParticlesAutobuyerToggle) {\n         buyUpgrade('nuclearbuy')\n      }\n      if (player.instantAutobuyers.nuclearAlphaParticlesAutobuyerToggle) {\n         buyUpgrade('nuclearalphabuy')\n      }\n      getElement('divNPA').style.display = 'none'\n      getElement('divNPAhide').style.display = 'block'\n   }\n   if (getUpgradeTimesBought('AAccAunlock').eq(Decimal.dOne)) {\n      if (player.instantAutobuyers.AlphaAccAutobuyerToggle) {\n         buyUpgrade('alphaacc')\n      }\n      getElement('divAAccA').style.display = 'none'\n      getElement('divAAccAhide').style.display = 'block'\n   }\n   if (getUpgradeTimesBought('SAunlock').eq(Decimal.dOne)) {\n      if (player.instantAutobuyers.SpeedAutobuyerToggle) {\n         buyUpgrade('speed')\n      }\n      getElement('divSA').style.display = 'none'\n      getElement('divSAhide').style.display = 'block'\n   }\n}\n\nfunction savinginloop(): void {\n   playerSettings.autoSaveDelay--;\n\n   if (playerSettings.autoSaveDelay === 0) {\n      playerSettings.autoSaveDelay = playerSettings.autoSaveSet;\n      save();\n   }\n}\n\n//game loop\nsetInterval(() => {\n   passiveUnlockDisplay();\n   pcaTestConst();\n   baTestConst();\n   fgbTestConst();\n   instantAutobuyers();\n   getElement('stat').textContent = getSaveString()\n      .replace(/\",\"/g, '\",\\n\"')\n      .replace(/},\"/g, '\",\\n\"');\n   savinginloop();\n}, 50);\n\nfunction saveReplace(_key: string, value: unknown): unknown {\n   if (value instanceof Decimal) return 'D#' + value.toString();\n   return value;\n}\n\nfunction saveSettings(): void {\n   const settingfile = JSON.stringify(playerSettings);\n   localStorage.setItem(location.pathname + \"settings\", settingfile);\n}\n\nwindow.saveSettings = saveSettings;\n\nfunction save(): string {\n   const savefile = btoa(JSON.stringify(player, saveReplace));\n   localStorage.setItem(location.pathname, savefile);\n   saveSettings();\n   return savefile;\n}\n\nwindow.save = save;\n\nwindow.reset = function (): void {\n   saveSettings();\n   localStorage.removeItem(location.pathname);\n\n   //make backup save\n   const savefile = JSON.stringify(player, saveReplace);\n   localStorage.setItem(location.pathname + \"backupsave\", savefile);\n   location.reload();\n};"],"names":["_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","LRUCache","maxSize","key","node","value","ListNode","last","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","LAYER_DOWN","FIRST_NEG_LAYER","NUMBER_EXP_MAX","NUMBER_EXP_MIN","MAX_ES_IN_A_ROW","DEFAULT_FROM_STRING_CACHE_SIZE","powerOf10","powersOf10","indexOf0InPowersOf10","power","critical_headers","critical_tetr_values","critical_slog_values","D","Decimal","FC","sign","layer","mag","FC_NN","decimalPlaces","places","len","numDigits","rounded","f_maglog10","f_gamma","scal1","l","n2","np","OMEGA","f_lambertw","z","tol","w","wn","d_lambertw","ew","wewz","exp","man","residue","absmag","signmag","mantissa","exponent","originalValue","cached","pentationparts","_base","_height","heightparts","payload","result","tetrationparts","_base2","_height2","_heightparts","_payload","_result","powparts","_base3","_exponent","_result2","base","height","ptparts","_payload2","_result3","_payload3","_result4","parts","ecount","numberAttempt","_numberAttempt","newparts","layerstring","chrcode","me","_result5","decimal","a","b","layera","layerb","magdiff","_magdiff","_mantissa","_magdiff2","_mantissa2","newmag","_newmag","_isFinite2","isFinite","min","max","tolerance","magA","magB","t","lm","adj","l2","lt","this_num","negln","oldheight","fracheight","old_payload","next_payload","_i","times","fulltimes","fraction","layerloss","iterations","step_size","has_changed_directions_once","previously_rose","new_decimal","currently_rose","copy","diff","layeradd","_layeradd","slogthis","slogdest","lnx","ascensions","other","_isNaN","isNaN","_x","_isFinite","_x2","_other","resourcesAvailable","priceStart","priceRatio","currentOwned","numItems","priceAdd","cost","currentRpS","deltaRpS","maxLayers","randomsign","randomexp","randommag","actualStart","b2","grid","lower","upper","basefrac","frac","player","playerSettings","updateGame","loadSettings","settings","decodedSettings","deepMerge","getElement","saveRevive","_key","getSaveString","source","data","newSource","load","save","decodedSave","backup","isAutobuyerName","x","UpgradeNames","isUpgradeName","getUpgradeCost","upgradeName","setUpgradeCost","costIn","getUpgradeTimesBought","trunc","ret","formatD","d","ePlaces","format","n","formatb","formatbSpecific","assertElementType","element","type","id","operatorMap","isOp","onD","is","lookup","fn","start","terms","first","rest","splitArgs","token","operand","args","left","method","arr","head","onBought","onBoughtInc","music","musicState","musicPlaying","currencyName","UpdateCostVal","elementID","variable","currency","precision","upgrades","scaleGen","scaleMultiplier","scaleSpeed","GBTExtra","GBMExtra","NBExtra","MachineExtra","scaleBangSpeed","PCAExtra","NABExtra","GBDExtra","scaleBA","BAExtra","BSExtra","scaleReactorUpMult","scaleReactorUpTime","multiplier","nuclearParticles","nuclearAlphaParticles","buyUpgrade","upgrade","oldCost","createAchievementHTML","newDiv","features","goal","nextFeatureHandler","feature","featureCurrency","nextGoal","percentage","divEntireBody","html","tabOpeners","whatTheme","tabOpenFactory","tabOpenAlpha","tabOpenBeta","tabOpenGamma","tabOpenDelta","tabOpenOmega","tabOpenOmegaOmega","tabOpenReactor","tabOpenStats","tabOpenAchievements","tabOpenDev","devToggle","autosaveElement","untilPcaElement","divTogglePcaElement","delayArray","themes","themeExec","theme","textColor","bgColor","buttonColor","borderColor","gradientColor","buttonGradientOverride","themeName","className","className2","className3","saveSettings","prePUD","passiveUnlockDisplay","devToolsVisibilityUpdate","autoSaveSet","delay","pcaTestSingle","baTestSingle","fgbTestSingle","instantAutobuyerState","autobuyerVar","autobuyerDiv","amountUpdate","autobuyerName","loadMisc","makeElementMap","names","tabElements","tabOmegaElements","hideElements","elements","name","tab","savefile","machineProd","clickerParticleMult","reactor","NAPfactor","BPfactor","MBfactor","GBfactor","totalBoostFromNP","totalBoostFromNAP","totalMBBoost","reactorHandler","NAPtoggle","BPtoggle","MBtoggle","GBtoggle","gain","makechunk","bang","makegroup","fuelType","fgbTestConst","boostsacmult","alphaGain","betaGain","abgbBoost","bpGain","percentBoostDisplay","clickerParticleGain","freeNuclearParticles","freeNuclearAlphaParticles","pcaTestConst","baTestConst","instantAutobuyers","savinginloop","saveReplace","settingfile"],"mappings":"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","x_google_ignoreList":[0]}